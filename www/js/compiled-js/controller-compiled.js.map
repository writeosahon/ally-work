{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 3/11/2017.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware.ally' namespace has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n\r\n// define the controller namespace\r\nutopiasoftware.ally.controller = {\r\n\r\n    /**\r\n     * method is used to handle the special event created by the intel xdk developer library. The special event (app.Ready)\r\n     * is triggered when ALL the hybrid app plugins have been loaded/readied and also the document DOM content is ready\r\n     */\r\n    appReady: () => {\r\n\r\n        // initialise the onsen library\r\n        ons.ready(function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n\r\n            if(utopiasoftware.ally.model.isAppReady === false){ // if app has not completed loading\r\n                // displaying prepping message\r\n                $('#loader-modal-message').html(\"Loading App...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n            }\r\n\r\n            // check if the user is currently logged in\r\n            if(window.localStorage.getItem(\"app-status\") && window.localStorage.getItem(\"app-status\") != \"\"){ // user is logged in\r\n                //set the first page to be displayed to be the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else{ // user has NOT been logged in\r\n                // set the first page to be displayed to be the onboarding page\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\");\r\n            }\r\n\r\n            // set the content page for the app\r\n            //$('ons-splitter').get(0).content.load(\"app-main-template\");\r\n\r\n\r\n        });\r\n        // END OF ONSEN LIBRARY READY EVENT\r\n\r\n\r\n        // add listener for when the Internet network connection is offline\r\n        document.addEventListener(\"offline\", function(){\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"No Internet Connection. App functionality may be limited\",\r\n                duration: 4000, // 4000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n\r\n        }, false);\r\n\r\n\r\n        try {\r\n            // lock the orientation of the device to 'PORTRAIT'\r\n            screen.lockOrientation('portrait');\r\n        }\r\n        catch(err){}\r\n\r\n        // set status bar color\r\n        StatusBar.backgroundColorByHexString(\"#2C8E01\");\r\n\r\n        // prepare the inapp browser plugin\r\n        window.open = cordova.InAppBrowser.open;\r\n\r\n        // use Promises to load the other cordova plugins\r\n        new Promise(function(resolve, reject){\r\n            // this promise  just sets the promise chain in motion\r\n            window.setTimeout(function(){\r\n                resolve(); // resolve the promise\r\n            }, 0);\r\n        }).\r\n        then(function(){ // load the securely stored / encrypted data into the app\r\n            // check if the user is currently logged in\r\n            if(! window.localStorage.getItem(\"app-status\") || window.localStorage.getItem(\"app-status\") == \"\"){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            return Promise.resolve(intel.security.secureStorage.read({\"id\": \"ally-user-details\"}));\r\n        }).\r\n        then(function(instanceId){\r\n            if(instanceId == null){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            return Promise.resolve(intel.security.secureData.getData(instanceId));\r\n        }).\r\n        then(function(secureData){\r\n\r\n            if(secureData == null){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            utopiasoftware.ally.model.appUserDetails = JSON.parse(secureData); // transfer the collected user details to the app\r\n            // update the first name being displayed in the side menu\r\n            //$('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n            return null;\r\n        }).\r\n        then(function(){\r\n            // notify the app that the app has been successfully initialised and is ready for further execution (set app ready flag to true)\r\n            utopiasoftware.ally.model.isAppReady = true;\r\n            // hide the splash screen\r\n            navigator.splashscreen.hide();\r\n        }).\r\n        catch(function(err){\r\n\r\n            // notify the app that the app has been successfully initialised and is ready for further execution (set app ready flag to true)\r\n            utopiasoftware.ally.model.isAppReady = true;\r\n            // hide the splash screen\r\n            navigator.splashscreen.hide();\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"Startup Error. App functionality may be limited. Always update the app to \" +\r\n                \"get the best secure experience. Please contact us if problem continues\",\r\n                duration: 5000, // 5000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is the view-model for the app side menu\r\n     */\r\n    sideMenuViewModel : {\r\n\r\n        /**\r\n         * method is used to listen for when the list\r\n         * items in the side menu is clicked\r\n         *\r\n         * @param label {String} label represents clicked list item in the side-menu\r\n         */\r\n        sideMenuListClicked: function(label) {\r\n\r\n\r\n            if(label == \"events schedule\"){ // 'events schedule' button was clicked\r\n\r\n                // close the side menu\r\n                $('ons-splitter').get(0).left.close().\r\n                then(function(){\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"events-schedule-page.html\", {}); // navigate to the specified page\r\n                }).catch(function(){});\r\n\r\n                return;\r\n            }\r\n\r\n            if(label == \"hotels\"){ // 'hotels' button was clicked\r\n\r\n                // close the side menu\r\n                $('ons-splitter').get(0).left.close().\r\n                then(function(){\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"hotels-page.html\", {}); // navigate to the specified page\r\n                }).catch(function(){});\r\n\r\n                return;\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for main-menu page\r\n     */\r\n    mainMenuPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                /*$('#app-main-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                }; */\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n            $('#menu-tabbar .tabbar__border').css(\"visibility\", \"hidden\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * method is used to track changes on the tabbar tabs\r\n         * @param event\r\n         */\r\n        tabbarPreChange(event){\r\n\r\n            // determine the tab that was clicked\r\n            switch(event.originalEvent.index){\r\n                case 0:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Dashboard\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 1:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Payments\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 2:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Wallet\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 3:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Account\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 4:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Menu\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for onboarding page\r\n     */\r\n    onboardingPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to listen for click events of the \"Sign Up\" button\r\n         *\r\n         */\r\n        signupButtonClicked: function(){\r\n\r\n            $('#onboarding-navigator').get(0).pushPage(\"signup-page.html\", {}); // navigate to the signup page\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to listen for click events of the \"Login\" button\r\n         *\r\n         */\r\n        loginButtonClicked: function(){\r\n\r\n            $('ons-splitter').get(0).content.load('login-template'); // navigate to the login page\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides\r\n         * @param event\r\n         */\r\n        carouselPostChange(event){\r\n\r\n            // change the carousel counter indicator based on the currently active and previously active carousel slides\r\n            $('#onboarding-page .carousel-counter').eq(event.originalEvent.lastActiveIndex).removeClass('active');\r\n            $('#onboarding-page .carousel-counter').eq(event.originalEvent.activeIndex).addClass('active');\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for login page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n\r\n                    $('ons-splitter').get(0).content.load('onboarding-template');\r\n                };\r\n\r\n                // check if the user is currently logged in\r\n                if(window.localStorage.getItem(\"app-status\") && window.localStorage.getItem(\"app-status\") != \"\"){ // user is logged in\r\n                    // display the user's save phone number on the login page phonenumber input\r\n                    $('#login-page #login-phone-number').val(utopiasoftware.ally.model.appUserDetails.phone);\r\n                }\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator = $('#login-form').parsley();\r\n\r\n                // attach listener for the log in button click event on the login page\r\n                $('#login-signin').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.ally.controller.loginPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.loginPageViewModel.loginFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the sign-in page\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the login page\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         *\r\n         */\r\n        loginFormValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"user cannot login to ALLY account without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                lock: $('#login-page #login-pin').val(),\r\n                phone: $('#login-page #login-phone-number').val().startsWith(\"0\") ?\r\n                    $('#login-page #login-phone-number').val().replace(\"0\", \"+234\"):$('#login-page #login-phone-number').val()\r\n            };\r\n\r\n\r\n            // begin login process\r\n            Promise.resolve().\r\n            then(function(){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#loader-modal-message').html(\"Completing User Login...\");\r\n                return Promise.resolve($('#loader-modal').get(0).show()); // show loader\r\n            }).\r\n            then(function(){ // clear all data belonging to previous user\r\n                var promisesArray = []; // holds all the Promise objects for all data being deleted\r\n\r\n                var promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user app details from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-details'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n\r\n                // return promise when all operations have completed\r\n                return Promise.all(promisesArray);\r\n            }).\r\n            then(function(){\r\n                // clear all data in the device local/session storage\r\n                window.localStorage.clear();\r\n                window.sessionStorage.clear();\r\n                return null;\r\n            }).\r\n            then(function(){\r\n                // upload the user details to the server\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/login.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: formData\r\n                    }\r\n                ));\r\n\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var newUser = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                newUser._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(newUser.status == \"error\"){ // an error occured\r\n                    throw newUser.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // store user data\r\n                utopiasoftware.ally.model.appUserDetails = newUser; // store the user details\r\n\r\n                return newUser; // return user data\r\n\r\n            }).\r\n            then(function(newUser){\r\n                // create a cypher data of the user details\r\n                return Promise.resolve(intel.security.secureData.\r\n                createFromData({\"data\": JSON.stringify(newUser)}));\r\n            }).\r\n            then(function(instanceId){\r\n                // store the cyphered data in secure persistent storage\r\n                return Promise.resolve(\r\n                    intel.security.secureStorage.write({\"id\": \"ally-user-details\", \"instanceID\": instanceId})\r\n                );\r\n            }).\r\n            then(function(){\r\n\r\n                // set app-status local storage (as user phone number)\r\n                window.localStorage.setItem(\"app-status\", utopiasoftware.ally.model.appUserDetails.phone);\r\n\r\n                // update the first name being displayed in the side menu\r\n                //$('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n\r\n                return $('#loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){ // navigate to the main menu page\r\n                return $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }).\r\n            then(function(){\r\n                ons.notification.toast(\"Login complete! Welcome\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Login could not be completed\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Log In Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for forgot-pin page\r\n     */\r\n    forgotPinPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n\r\n                    $('#login-navigator').get(0).popPage({});\r\n                };\r\n\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator = $('#forgot-pin-form').parsley();\r\n\r\n                // attach listener for the log in button click event on the login page\r\n                $('#forgot-pin-reset').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.forgotPinPageViewModel.forgotPinFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the page\r\n                $('#forgot-pin-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#forgot-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the page\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the page\r\n                $('#forgot-pin-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#forgot-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the page\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         *\r\n         */\r\n        forgotPinFormValidated: function(){\r\n\r\n            $('#login-navigator').get(0).popPage({});\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for signup page\r\n     */\r\n    signupPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    // move to the onboarding page\r\n                    $('#onboarding-navigator').get(0).popPage({});\r\n                };\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator = $('#signup-form').parsley();\r\n\r\n                // attach listener for the sign up button on the page\r\n                $('#signup-signup-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.signupPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.signupPageViewModel.signupFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the signup page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#signup-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#signup-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the signup page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#signup-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#signup-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-up form is successfully validated\r\n         */\r\n        signupFormValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY account cannot be created without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var createAcctFormData = {\r\n                firstName: $('#signup-page #signup-firstname').val(),\r\n                lastName: $('#signup-page #signup-lastname').val(),\r\n                lock: $('#signup-page #signup-secure-pin').val(),\r\n                phone: $('#signup-page #signup-phone-number').val().startsWith(\"0\") ?\r\n                    $('#signup-page #signup-phone-number').val().replace(\"0\", \"+234\"):$('#signup-page #signup-phone-number').val()\r\n            };\r\n\r\n\r\n            // tell the user that phone number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete sign up, your phone number must be verified. <br>' +\r\n                        'Usual SMS charge from your phone network provider will apply.<br> ' +\r\n                        'Please ensure you have sufficient airtime to send/receive one SMS', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){ // verify the user's phone number\r\n\r\n                //return null;\r\n                return utopiasoftware.ally.validatePhoneNumber($('#signup-page #signup-phone-number').val());\r\n            }).\r\n            then(function(){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#loader-modal-message').html(\"Completing Sign Up...\");\r\n                return Promise.resolve($('#loader-modal').get(0).show()); // show loader\r\n            }).\r\n            then(function(){ // clear all data belonging to previous user\r\n                var promisesArray = []; // holds all the Promise objects for all data being deleted\r\n\r\n                var promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user app details from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-details'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n\r\n                // return promise when all operations have completed\r\n                return Promise.all(promisesArray);\r\n            }).\r\n            then(function(){\r\n                // clear all data in the device local/session storage\r\n                window.localStorage.clear();\r\n                window.sessionStorage.clear();\r\n                return null;\r\n            }).\r\n            then(function(){\r\n                // upload the user details to the server\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/signup.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: createAcctFormData\r\n                    }\r\n                ));\r\n\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var newUser = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                newUser._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(newUser.status == \"error\"){ // an error occured\r\n                    throw newUser.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // store user data\r\n                utopiasoftware.ally.model.appUserDetails = newUser;\r\n\r\n                return newUser;\r\n\r\n            }).\r\n            then(function(newUser){\r\n                // create a cypher data of the user details\r\n                return Promise.resolve(intel.security.secureData.\r\n                createFromData({\"data\": JSON.stringify(newUser)}));\r\n            }).\r\n            then(function(instanceId){\r\n                // store the cyphered data in secure persistent storage\r\n                return Promise.resolve(\r\n                    intel.security.secureStorage.write({\"id\": \"ally-user-details\", \"instanceID\": instanceId})\r\n                );\r\n            }).\r\n            then(function(){\r\n\r\n                // set app-status local storage (as user phone number)\r\n                window.localStorage.setItem(\"app-status\", utopiasoftware.ally.model.appUserDetails.phone);\r\n\r\n                // update the first name being displayed in the side menu\r\n                //$('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n\r\n                return $('#loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                return $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }).\r\n            then(function(){\r\n                ons.notification.toast(\"Sign Up complete! Welcome\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Sign Up could not be completed\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Sign Up Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement){\r\n            if($(buttonElement).attr(\"data-ally-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $('#signup-secure-pin input').css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-ally-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $('#signup-secure-pin input').css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-ally-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to change the value for the Verify Phone Number based on the checkbox state.\r\n         * This change is used to enable validation for the input\r\n         *\r\n         * @param inputElement\r\n         */\r\n        verifyPhoneNumberClicked: function(inputElement){\r\n            if(inputElement.checked){ // input is checked\r\n                // update the input value\r\n                inputElement.value = \"checked\"\r\n            }\r\n            else{ // input is NOT checked\r\n                // reset the input value\r\n                inputElement.value = \"\"\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for dashboard page\r\n     */\r\n    dashboardPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.dashboardPageViewModel.backButtonClicked;\r\n\r\n                // initialise the DropDownList\r\n                let dropDownListObject = new ej.dropdowns.DropDownList({});\r\n\r\n                // render initialized DropDownList\r\n                dropDownListObject.appendTo('#dashboard-period-select');\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for account page\r\n     */\r\n    accountPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.accountPageViewModel.backButtonClicked;\r\n\r\n                $('#account-preloading-fab', $thisPage).css(\"display\", \"inline-block\"); // display page preloader\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator = $('#account-page #account-form').parsley();\r\n\r\n                // listen for form field validation failure event\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.accountPageViewModel.accountFormValidated);\r\n\r\n                // load the user data\r\n                utopiasoftware.ally.controller.accountPageViewModel.loadUserAccountData().\r\n                then(function(userDetails){ // save the returned user details in app cache\r\n                    return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n                }).\r\n                then(function(userDetails){ // update the page with the collect data details\r\n\r\n                    // update user data on app\r\n                    utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                    $('#account-wallet-balance', $thisPage).\r\n                    html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n                    $('#account-last-updated', $thisPage).\r\n                    html(kendo.toString(new Date(userDetails._lastUpdatedDate), \"MMM d yyyy, h:mmtt\"));\r\n                    $('#account-firstname', $thisPage).val(userDetails.firstname);\r\n                    $('#account-lastname', $thisPage).val(userDetails.lastname);\r\n                    $('#account-phone-number', $thisPage).val(userDetails.phone);\r\n                    $('#account-email', $thisPage).val((userDetails.email && userDetails.email != \"\") ? userDetails.email : \"\");\r\n\r\n                    // display the necessary page components\r\n                    $('#account-list', $thisPage).css(\"display\", \"block\");\r\n                    $('#account-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n                    $('#account-edit-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide necessary page components\r\n                    $('#account-save', $thisPage).css(\"display\", \"none\");\r\n                    $('#account-page-error', $thisPage).css(\"display\", \"none\");\r\n                    // hide page preloader\r\n                    $('#account-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }).\r\n                catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                    // hide the necessary page components\r\n                    $('#account-list', $thisPage).css(\"display\", \"none\");\r\n                    $('#account-save', $thisPage).css(\"display\", \"none\");\r\n                    $('#account-edit-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // display necessary page components\r\n                    $('#account-page-error', $thisPage).css(\"display\", \"block\");\r\n                    $('#account-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide page preloader\r\n                    $('#account-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#account-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator objects on the page\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#account-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // check if the menu tabbar exists\r\n            if($('#menu-tabbar').get(0)){ // the menu tabbar object exists\r\n                // move to the previous tab\r\n                $('#menu-tabbar').get(0).setActiveTab(2);\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Edit Account fab button is clicked\r\n         */\r\n        editAccountButtonClicked(){\r\n\r\n            // remove the the readonly attributes, so the form  elements can be editable\r\n            $('#account-page [data-ally-readonly-field]').removeAttr('readonly');\r\n            // hide the edit account button\r\n            $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n            // show the save account button\r\n            $('#account-page #account-save').css(\"display\", \"inline-block\");\r\n            // display the instruction for running the account edit\r\n            ons.notification.toast(\"you can edit your account\", {timeout:3000});\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Refresh Account fab button is clicked\r\n         */\r\n        refreshAccountButtonClicked(){\r\n\r\n            // add the the readonly attributes, so the form  elements cannot be editable\r\n            $('#account-page [data-ally-readonly-field]').attr('readonly', true);\r\n            // hide the edit account button\r\n            $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n            // hide the save account button\r\n            $('#account-page #account-save').css(\"display\", \"none\");\r\n            // remove any tooltip being displayed on all forms on the page\r\n            $('#account-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n            $('#account-page [data-hint]').removeAttr(\"data-hint\");\r\n            // reset the form validator objects on the page\r\n            utopiasoftware.ally.controller.accountPageViewModel.formValidator.reset();\r\n\r\n            // display the page preloader\r\n            $('#account-page #account-preloading-fab').css(\"display\", \"inline-block\");\r\n\r\n            // load the user data\r\n            utopiasoftware.ally.controller.accountPageViewModel.loadUserAccountData().\r\n            then(function(userDetails){ // save the returned user details in app cache\r\n                return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n            }).\r\n            then(function(userDetails){ // update the page with the collected data details\r\n\r\n                // update user data on app\r\n                utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                $('#account-page #account-wallet-balance').\r\n                html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n                $('#account-page #account-last-updated').\r\n                html(kendo.toString(new Date(userDetails._lastUpdatedDate), \"MMM d yyyy, h:mmtt\"));\r\n                $('#account-page #account-firstname').val(userDetails.firstname);\r\n                $('#account-page #account-lastname').val(userDetails.lastname);\r\n                $('#account-page #account-phone-number').val(userDetails.phone);\r\n                $('#account-page #account-email').val((userDetails.email && userDetails.email != \"\") ? userDetails.email : \"\");\r\n\r\n                // display the necessary page components\r\n                $('#account-page #account-list').css(\"display\", \"block\");\r\n                $('#account-page #account-reload-fab').css(\"display\", \"inline-block\");\r\n                $('#account-page #account-edit-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide necessary page components\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n                $('#account-page #account-page-error').css(\"display\", \"none\");\r\n                // hide page preloader\r\n                $('#account-page #account-preloading-fab').css(\"display\", \"none\");\r\n\r\n            }).\r\n            catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                // hide the necessary page components\r\n                $('#account-page #account-list').css(\"display\", \"none\");\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n                $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n\r\n                // display necessary page components\r\n                $('#account-page #account-page-error').css(\"display\", \"block\");\r\n                $('#account-page #account-reload-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#account-page #account-preloading-fab').css(\"display\", \"none\");\r\n\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Save Account fab button is clicked\r\n         */\r\n        saveAccountButtonClicked(){\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware.ally.controller.accountPageViewModel.formValidator.whenValidate();\r\n            console.log(\"SAVE BUTTON CLICKED\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when form is successfully validated\r\n         */\r\n        accountFormValidated(){\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY account cannot be updated without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // ask user for secure PIN before proceeding. secure pin MUST match\r\n            ons.notification.prompt({title: '<ons-icon icon=\"ion-lock-combination\" size=\"28px\" ' +\r\n            'style=\"color: #30a401;\"></ons-icon> Security Check', id: \"pin-security-check\",\r\n                messageHTML: '<div><span>' +\r\n                'Please enter your ALLY Secure PIN to proceed</span></div>',\r\n                cancelable: true, placeholder: \"Secure PIN\", inputType: \"number\", defaultValue: \"\", autofocus: false,\r\n                submitOnEnter: true\r\n            }).\r\n            then(function(userInput){ // collect user secure PIN and submit the rest of the form data\r\n\r\n                // add the the readonly attributes, so the form  elements cannot be editable\r\n                $('#account-page [data-ally-readonly-field]').attr('readonly', true);\r\n                // hide the edit account button\r\n                $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n                // hide the save account button\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n\r\n\r\n                // create the form data to be submitted\r\n                var formData = {\r\n                    firstName: $('#account-page #account-firstname').val(),\r\n                    lastName: $('#account-page #account-lastname').val(),\r\n                    lock: userInput,\r\n                    phone: $('#account-page #account-phone-number').val(),\r\n                    email: $('#account-page #account-email').val()\r\n                };\r\n\r\n\r\n                // display the loader message to indicate that account is being created;\r\n                $('#hour-glass-loader-modal .modal-message').html(\"Saving Account Details...\");\r\n                // forward the form data &show loader\r\n                return Promise.all([formData, Promise.resolve($('#hour-glass-loader-modal').get(0).show())]);\r\n\r\n            }).\r\n            then(function(dataArray){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/update-profile.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: dataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var userAcctDetails = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                userAcctDetails._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(userAcctDetails.status == \"error\"){ // an error occured\r\n                    throw userAcctDetails.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return utopiasoftware.ally.saveUserAppDetails(userAcctDetails); // cache the returned account details\r\n            }).\r\n            then(function(userAcctDetails){\r\n               // update the user data on the app\r\n                utopiasoftware.ally.model.appUserDetails = userAcctDetails;\r\n                return userAcctDetails;\r\n            }).\r\n            then(function(){\r\n\r\n                // display the necessary page components\r\n                $('#account-page #account-list').css(\"display\", \"block\");\r\n                $('#account-page #account-reload-fab').css(\"display\", \"inline-block\");\r\n                $('#account-page #account-edit-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide necessary page components\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n                $('#account-page #account-page-error').css(\"display\", \"none\");\r\n                // hide page preloader\r\n                $('#account-page #account-preloading-fab').css(\"display\", \"none\");\r\n\r\n                return $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                ons.notification.toast(\"Account Details Updated!\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Your account details could not be updated. Please retry\"\r\n                }\r\n\r\n                // remove the readonly attributes, so the form  elements can be editable\r\n                $('#account-page [data-ally-readonly-field]').removeAttr('readonly', true);\r\n                // hide the edit account button\r\n                $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n                // show the save account button\r\n                $('#account-page #account-save').css(\"display\", \"inline-block\");\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Account Update Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to load the user account data either from\r\n         * the locally cached data OR directly from the remote server\r\n         */\r\n        loadUserAccountData(){\r\n            return new Promise(function(resolve, reject){\r\n\r\n                // check if there is internet connection\r\n                if(navigator.connection.type === Connection.NONE){ // no internet connection\r\n                    // inform the user that cached data will be displayed in the absence of internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#008000',\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n                    // no internet connection, so use local cache of data\r\n                    resolve(utopiasoftware.ally.loadUserCachedAppDetails());\r\n                }\r\n                else{ // there's internet, so make request for new data\r\n\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-profile.php\",\r\n                            type: \"post\",\r\n                            contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                            },\r\n                            dataType: \"text\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {phone: utopiasoftware.ally.model.appUserDetails.phone} // data to submit to server\r\n                        }\r\n                    )).\r\n                    then(function(serverResponseText){\r\n                        serverResponseText +=  \"\";\r\n                        var userDetailsData = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                        // add a timestamp for the last time user details was updated\r\n                        userDetailsData._lastUpdatedDate = Date.now();\r\n\r\n                        // check if any error occurred\r\n                        if(userDetailsData.status == \"error\"){ // an error occurred\r\n                            throw userDetailsData.message; // throw the error message attached to this error\r\n                        }\r\n\r\n\r\n                        resolve(userDetailsData); // return user data and resolve the Promise\r\n\r\n                    }).catch(function(err){\r\n                        reject(err); // reject the Promise error\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for wallet page\r\n     */\r\n    walletPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.walletPageViewModel.backButtonClicked;\r\n\r\n                $('#wallet-preloading-fab', $thisPage).css(\"display\", \"inline-block\"); // display page preloader\r\n\r\n                // load the user data\r\n                utopiasoftware.ally.controller.walletPageViewModel.loadUserAccountData().\r\n                then(function(userDetails){ // save the returned user details in app cache\r\n                    return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n                }).\r\n                then(function(userDetails){ // update the page with the collect data details\r\n\r\n                    // update user data on app\r\n                    utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                    $('#wallet-balance', $thisPage).\r\n                    html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n\r\n                    $('#wallet-owner-name', $thisPage).val(userDetails.firstname + \" \" + userDetails.lastname);\r\n\r\n                    // display the necessary page components\r\n                    $('#wallet-list', $thisPage).css(\"display\", \"block\");\r\n                    $('#wallet-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide page preloader\r\n                    $('#wallet-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }).\r\n                catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                    // display the necessary page components\r\n                    $('#wallet-list', $thisPage).css(\"display\", \"block\");\r\n\r\n                    // display necessary page components\r\n                    $('#wallet-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide page preloader\r\n                    $('#wallet-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // check if the menu tabbar exists\r\n            if($('#menu-tabbar').get(0)){ // the menu tabbar object exists\r\n                // move to the previous tab\r\n                $('#menu-tabbar').get(0).setActiveTab(1);\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Refresh Account fab button is clicked\r\n         */\r\n        refreshAccountButtonClicked(){\r\n\r\n            // display the page preloader\r\n            $('#wallet-page #wallet-preloading-fab').css(\"display\", \"inline-block\");\r\n\r\n            // load the user data\r\n            utopiasoftware.ally.controller.walletPageViewModel.loadUserAccountData().\r\n            then(function(userDetails){ // save the returned user details in app cache\r\n                return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n            }).\r\n            then(function(userDetails){ // update the page with the collected data details\r\n\r\n                // update user data on app\r\n                utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                $('#wallet-page #wallet-balance').\r\n                html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n\r\n                $('#wallet-page #wallet-owner-name').val(userDetails.firstname + \" \" + userDetails.lastname);\r\n\r\n                // display the necessary page components\r\n                $('#wallet-page #wallet-list').css(\"display\", \"block\");\r\n                $('#wallet-page #wallet-reload-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#wallet-page #wallet-preloading-fab').css(\"display\", \"none\");\r\n\r\n            }).\r\n            catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                // display the necessary page components\r\n                $('#wallet-page #wallet-list').css(\"display\", \"none\");\r\n\r\n                // display necessary page components\r\n                $('#wallet-page #wallet-reload-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#wallet-page #wallet-preloading-fab').css(\"display\", \"none\");\r\n\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to load the user account data either from\r\n         * the locally cached data OR directly from the remote server\r\n         */\r\n        loadUserAccountData(){\r\n            return new Promise(function(resolve, reject){\r\n\r\n                // check if there is internet connection\r\n                if(navigator.connection.type === Connection.NONE){ // no internet connection\r\n                    // inform the user that cached data will be displayed in the absence of internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#008000',\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n                    // no internet connection, so use local cache of data\r\n                    resolve(utopiasoftware.ally.loadUserCachedAppDetails());\r\n                }\r\n                else{ // there's internet, so make request for new data\r\n\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-profile.php\",\r\n                            type: \"post\",\r\n                            contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                            },\r\n                            dataType: \"text\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {phone: utopiasoftware.ally.model.appUserDetails.phone} // data to submit to server\r\n                        }\r\n                    )).\r\n                    then(function(serverResponseText){\r\n                        serverResponseText +=  \"\";\r\n                        var userDetailsData = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                        // add a timestamp for the last time user details was updated\r\n                        userDetailsData._lastUpdatedDate = Date.now();\r\n\r\n                        // check if any error occurred\r\n                        if(userDetailsData.status == \"error\"){ // an error occurred\r\n                            throw userDetailsData.message; // throw the error message attached to this error\r\n                        }\r\n\r\n\r\n                        resolve(userDetailsData); // return user data and resolve the Promise\r\n\r\n                    }).catch(function(err){\r\n                        reject(err); // reject the Promise error\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for fund-wallet page\r\n     */\r\n    fundWalletPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        amountFieldValidator: null,\r\n\r\n        /**\r\n         * used to hold the Card Number DropDownList component\r\n         */\r\n        cardDropDownList: null,\r\n\r\n        /**\r\n         * * used to hold the ej Tooltip component\r\n         */\r\n        formTooltip: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.backButtonClicked;\r\n\r\n\r\n\r\n                // initialise the card DropDown widget\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList =  new ej.dropdowns.DropDownList({\r\n                    //set the data to dataSource property\r\n                    dataSource: [\"******2341\"],\r\n                    placeholder: \"Select Card\",\r\n                    popupHeight: \"300px\"\r\n                });\r\n\r\n                // render initialized card DropDownList\r\n               utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.appendTo('#fund-wallet-card-number');\r\n\r\n\r\n                // initialise form tooltips\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formTooltip = new ej.popups.Tooltip({\r\n                    target: '.ally-input-tooltip',\r\n                    position: 'top center',\r\n                    cssClass: 'ally-input-tooltip',\r\n                    opensOn: 'focus'\r\n                });\r\n\r\n                // render the initialized form tooltip\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formTooltip.appendTo('#fund-wallet-form');\r\n\r\n                // initialise the amount field\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.amountFieldValidator =\r\n                    $('#fund-wallet-amount').parsley({\r\n                        value: function(parsley) {\r\n                            // convert the amount back to a plain text without the thousand separator\r\n                            let parsedNumber = kendo.parseFloat($('#fund-wallet-amount', $thisPage).val());\r\n                            return (parsedNumber ? parsedNumber : $('#fund-wallet-amount', $thisPage).val());\r\n                        }\r\n                    });\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator = $('#fund-wallet-form').parsley();\r\n\r\n                // attach listener for the fund wallet button on the page\r\n                $('#fund-wallet-fund-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for the form field validation failure event\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                    $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                    $(fieldInstance.$element).removeAttr(\"title\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.formValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#fund-wallet-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"title\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            console.log(\"PAGE DESTROYED\");\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#fund-wallet-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"title\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.destroy();\r\n                // destroy other form components\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.destroy();\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formTooltip.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY wallet cannot be funded without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            /** var createAcctFormData = {\r\n                firstName: $('#signup-page #signup-firstname').val(),\r\n                lastName: $('#signup-page #signup-lastname').val(),\r\n                lock: $('#signup-page #signup-secure-pin').val(),\r\n                phone: $('#signup-page #signup-phone-number').val().startsWith(\"0\") ?\r\n                    $('#signup-page #signup-phone-number').val().replace(\"0\", \"+234\"):$('#signup-page #signup-phone-number').val()\r\n            };\r\n\r\n\r\n            // tell the user that phone number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete sign up, your phone number must be verified. <br>' +\r\n                        'Usual SMS charge from your phone network provider will apply.<br> ' +\r\n                        'Please ensure you have sufficient airtime to send/receive one SMS', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){ // verify the user's phone number\r\n\r\n                //return null;\r\n                return utopiasoftware.ally.validatePhoneNumber($('#signup-page #signup-phone-number').val());\r\n            }).\r\n            then(function(){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#loader-modal-message').html(\"Completing Sign Up...\");\r\n                return Promise.resolve($('#loader-modal').get(0).show()); // show loader\r\n            }).\r\n            then(function(){ // clear all data belonging to previous user\r\n                var promisesArray = []; // holds all the Promise objects for all data being deleted\r\n\r\n                var promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user app details from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-details'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n\r\n                // return promise when all operations have completed\r\n                return Promise.all(promisesArray);\r\n            }).\r\n            then(function(){\r\n                // clear all data in the device local/session storage\r\n                window.localStorage.clear();\r\n                window.sessionStorage.clear();\r\n                return null;\r\n            }).\r\n            then(function(){\r\n                // upload the user details to the server\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/signup.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: createAcctFormData\r\n                    }\r\n                ));\r\n\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var newUser = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                newUser._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(newUser.status == \"error\"){ // an error occured\r\n                    throw newUser.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // store user data\r\n                utopiasoftware.ally.model.appUserDetails = newUser;\r\n\r\n                return newUser;\r\n\r\n            }).\r\n            then(function(newUser){\r\n                // create a cypher data of the user details\r\n                return Promise.resolve(intel.security.secureData.\r\n                createFromData({\"data\": JSON.stringify(newUser)}));\r\n            }).\r\n            then(function(instanceId){\r\n                // store the cyphered data in secure persistent storage\r\n                return Promise.resolve(\r\n                    intel.security.secureStorage.write({\"id\": \"ally-user-details\", \"instanceID\": instanceId})\r\n                );\r\n            }).\r\n            then(function(){\r\n\r\n                // set app-status local storage (as user phone number)\r\n                window.localStorage.setItem(\"app-status\", utopiasoftware.ally.model.appUserDetails.phone);\r\n\r\n                // update the first name being displayed in the side menu\r\n                //$('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n\r\n                return $('#loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                return $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }).\r\n            then(function(){\r\n                ons.notification.toast(\"Sign Up complete! Welcome\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Sign Up could not be completed\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Sign Up Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            }); **/\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // remove this page form the main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        }\r\n\r\n    }\r\n\r\n};\r\n"]}