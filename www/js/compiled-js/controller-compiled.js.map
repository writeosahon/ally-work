{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 3/11/2017.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware.ally' namespace has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n\r\n// define the controller namespace\r\nutopiasoftware.ally.controller = {\r\n\r\n    /**\r\n     * method is used to handle the special event created by the intel xdk developer library. The special event (app.Ready)\r\n     * is triggered when ALL the hybrid app plugins have been loaded/readied and also the document DOM content is ready\r\n     */\r\n    appReady: () => {\r\n\r\n        // initialise the onsen library\r\n        ons.ready(function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n\r\n            if(utopiasoftware.ally.model.isAppReady === false){ // if app has not completed loading\r\n                // displaying prepping message\r\n                $('#loader-modal-message').html(\"Loading App...\");\r\n                $('#loader-modal').get(0).show(); // show loader\r\n            }\r\n\r\n            // check if the user is currently logged in\r\n            if(window.localStorage.getItem(\"app-status\") && window.localStorage.getItem(\"app-status\") != \"\"){ // user is logged in\r\n                //set the first page to be displayed to be the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else{ // user has NOT been logged in\r\n                // set the first page to be displayed to be the onboarding page\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\");\r\n            }\r\n\r\n\r\n            // listen to when the device back button is clicked when the lock screen modal is shown\r\n            $('#lock-screen-modal').get(0).onDeviceBackButton = utopiasoftware.ally.controller.\r\n                lockScreenModalViewModel.exitButtonClicked;\r\n\r\n            // listen for \"HOLD\" events that are triggered in the app\r\n            document.addEventListener('hold', function(event) {\r\n                // check if the backspace button in the 'lock-screen-modal' is held\r\n                if ($(event.target).closest('#lock-screen-backspace-col', '#lock-screen-modal').\r\n                    is('#lock-screen-backspace-col')) { //backspace button has been held\r\n                    // remove the entire contents of the input field\r\n                    $('#lock-screen-modal #lock-screen-lock-pin').val(\"\");\r\n                    return; // exit\r\n                }\r\n\r\n\r\n            });\r\n\r\n        });\r\n        // END OF ONSEN LIBRARY READY EVENT\r\n\r\n\r\n        // add listener for when the Internet network connection is offline\r\n        document.addEventListener(\"offline\", function(){\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"No Internet Connection. App functionality may be limited\",\r\n                duration: 4000, // 4000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n\r\n        }, false);\r\n\r\n        // add listener for when the device is going into the background i.e. paused\r\n        document.addEventListener(\"pause\", function(){\r\n            // get the current page view\r\n            var currentPageView = $('ons-splitter').get(0).content.page;\r\n\r\n            // if user is on the onboarding or login screens, do nothing\r\n            if(currentPageView.toString() == 'onboarding-template' || currentPageView.toString() == 'login-template'){\r\n                return; // exit\r\n            }\r\n\r\n            cordova.plugins.Keyboard.close(); // hide the keyboard, if it is visible\r\n\r\n            // reset the input that was previously displayed\r\n            $('#lock-screen-modal #lock-screen-lock-pin').val(\"\");\r\n            // hide the screen pin display message\r\n            $('#lock-screen-modal #lock-screen-message').css(\"visibility\", \"hidden\");\r\n\r\n            // show the lock screen modal\r\n            $('#lock-screen-modal').get(0).show();\r\n        }, false);\r\n\r\n\r\n        try {\r\n            // lock the orientation of the device to 'PORTRAIT'\r\n            screen.lockOrientation('portrait');\r\n        }\r\n        catch(err){}\r\n\r\n        // set status bar color\r\n        StatusBar.backgroundColorByHexString(\"#2C8E01\");\r\n\r\n        // prepare the inapp browser plugin\r\n        window.open = cordova.InAppBrowser.open;\r\n\r\n        // use Promises to load the other cordova plugins\r\n        new Promise(function(resolve, reject){\r\n            // this promise  just sets the promise chain in motion\r\n            window.setTimeout(function(){\r\n                resolve(); // resolve the promise\r\n            }, 0);\r\n        }).\r\n        then(function(){ // load the securely stored / encrypted data into the app\r\n            // check if the user is currently logged in\r\n            if(! window.localStorage.getItem(\"app-status\") || window.localStorage.getItem(\"app-status\") == \"\"){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            return Promise.all(\r\n                [Promise.resolve(intel.security.secureStorage.read({\"id\": \"ally-user-details\"})),\r\n                    Promise.resolve(intel.security.secureStorage.read({\"id\": \"ally-user-secure-pin\"}))]);\r\n        }).\r\n        then(function(instanceIdArray){\r\n            if(instanceIdArray == null || instanceIdArray[0] == null || instanceIdArray[1] == null){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            return Promise.all([Promise.resolve(intel.security.secureData.getData(instanceIdArray[0])),\r\n                Promise.resolve(intel.security.secureData.getData(instanceIdArray[1]))]);\r\n        }).\r\n        then(function(secureDataArray){\r\n\r\n            if(secureDataArray == null || secureDataArray[0] == null || secureDataArray[1] == null){ // user is not logged in\r\n                return null;\r\n            }\r\n\r\n            utopiasoftware.ally.model.appUserDetails = JSON.parse(secureDataArray[0]); // transfer the collected user details to the app\r\n            utopiasoftware.ally.model.appSecurePin = secureDataArray[1];\r\n\r\n            return null;\r\n        }).then(function(){ // setup push notification for the app\r\n\r\n            window.plugins.OneSignal\r\n                .startInit(\"d5d2bdba-eec0-46b1-836e-c5b8e318e928\")\r\n                .inFocusDisplaying(window.plugins.OneSignal.OSInFocusDisplayOption.None)\r\n                .handleNotificationReceived(utopiasoftware.ally.controller.pushNotificationModel.notificationOpened)\r\n                .handleNotificationOpened(utopiasoftware.ally.controller.pushNotificationModel.notificationOpened)\r\n                .endInit();\r\n            return null;\r\n        }).\r\n        then(function(){ // start analytics tracking todo\r\n            hockeyapp.start(function(){\r\n                hockeyapp.trackEvent(function(){}, function(){}, \"USER SESSION STARTED\"); // track start app session\r\n            }, function(){}, \"eeb9deb1b58d44948be72f178c159fbc\");\r\n        }).\r\n        then(function(){\r\n            // notify the app that the app has been successfully initialised and is ready for further execution (set app ready flag to true)\r\n            utopiasoftware.ally.model.isAppReady = true;\r\n            // hide the splash screen\r\n            navigator.splashscreen.hide();\r\n        }).\r\n        catch(function(err){\r\n\r\n            // notify the app that the app has been successfully initialised and is ready for further execution (set app ready flag to true)\r\n            utopiasoftware.ally.model.isAppReady = true;\r\n            // hide the splash screen\r\n            navigator.splashscreen.hide();\r\n\r\n            // display a toast message to let user no there is no Internet connection\r\n            window.plugins.toast.showWithOptions({\r\n                message: \"Startup Error. App functionality may be limited. Always update the app to \" +\r\n                \"get the best secure experience. Please contact us if problem continues\",\r\n                duration: 5000, // 5000 ms\r\n                position: \"bottom\",\r\n                styling: {\r\n                    opacity: 1,\r\n                    backgroundColor: '#000000',\r\n                    textColor: '#FFFFFF',\r\n                    textSize: 14\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is the view-model for the app side menu\r\n     */\r\n    sideMenuViewModel : {\r\n\r\n        /**\r\n         * method is used to listen for when the list\r\n         * items in the side menu is clicked\r\n         *\r\n         * @param label {String} label represents clicked list item in the side-menu\r\n         */\r\n        sideMenuListClicked: function(label) {\r\n\r\n\r\n            if(label == \"change pin\"){ // 'change pin' list item was clicked\r\n\r\n                // close the side menu\r\n                $('ons-splitter').get(0).right.close().\r\n                then(function(){\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"change-pin-page.html\", {}); // navigate to the specified page\r\n                }).catch(function(){});\r\n\r\n                return;\r\n            }\r\n\r\n            if(label == \"transaction history\"){ // 'transaction history' list item was clicked\r\n\r\n                // close the side menu\r\n                $('ons-splitter').get(0).right.close().\r\n                then(function(){\r\n                    $('#app-main-navigator').get(0).bringPageTop(\"transaction-history-page.html\", {}); // navigate to the specified page\r\n                }).catch(function(){});\r\n\r\n                return;\r\n            }\r\n\r\n            if(label == \"sign out\"){ // 'sign out' list item was clicked\r\n\r\n                // display the loader message to indicate that user is signing out;\r\n                $('#loader-modal-message').html(\"Completing User Sign Out...\");\r\n\r\n                // close the side menu\r\n                Promise.all([$('ons-splitter').get(0).right.close(), $('#loader-modal').get(0).show()]).\r\n                then(function(){\r\n                    // clear all data in the device local/session storage\r\n                    window.localStorage.clear();\r\n                    window.sessionStorage.clear();\r\n                    // clear the user data used in-app\r\n                    utopiasoftware.ally.model.appSecurePin = null;\r\n                    utopiasoftware.ally.model.appUserDetails = {};\r\n\r\n                    return new Promise(function(resolve, reject){\r\n                        // delete the user app details from secure storage if it exists\r\n                        Promise.resolve(intel.security.secureStorage.\r\n                        delete({'id':'ally-user-details'})).\r\n                        then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                    });\r\n\r\n                }).\r\n                then(function(){ // hide the loader\r\n                    return $('#loader-modal').get(0).hide();\r\n                }).\r\n                then(function(){ // load the login page\r\n                    $('ons-splitter').get(0).content.load('login-template'); // navigate to the login page\r\n                }).\r\n                catch(function(){});\r\n                Promise.all([$('#loader-modal').get(0).hide(), $('ons-splitter').get(0).content.load('login-template')]);\r\n                return;\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * object is the view-model for the app push notification\r\n     */\r\n    pushNotificationModel: {\r\n\r\n        /**\r\n         * method is used to handle both when notification are opened from the notification tray AND when a\r\n         * notification is received when the app is open\r\n         * @param notificationObj\r\n         */\r\n        notificationOpened(notificationObj){\r\n\r\n            // check if the notification data is stored in another object(for when the notification is opened from 'tray')\r\n            if(notificationObj.notification){ // notification was opened from tray\r\n                notificationObj = notificationObj.notification; // assign the 'real' notification object to the passed param\r\n            }\r\n\r\n            // set the title for the notification message\r\n            $('#push-notification-modal #push-notification-heading').html(notificationObj.payload.title);\r\n            // set the content for the push notification message\r\n            $('#push-notification-modal #push-notification-message').html(notificationObj.payload.body);\r\n            $('#push-notification-modal').get(0).show(); // show the push-notification modal\r\n        }\r\n    },\r\n\r\n    /**\r\n     * object is the view-model for the app lock-screen-modal\r\n     */\r\n    lockScreenModalViewModel: {\r\n\r\n        /**\r\n         * property holds the input field jquery object used in the\r\n         * security pin lock modal\r\n         */\r\n        $pinLockInputField: null,\r\n\r\n\r\n        /**\r\n         * holds the unique id assigned to every timer which is used to\r\n         * change the input field entry from 'visible' to 'hidden'\r\n         */\r\n        clearTimeoutId: -1,\r\n\r\n\r\n        /**\r\n         * method is triggered when a number key on the app security pin lock is tapped\r\n         *\r\n         * @param numberInput {String} number input\r\n         */\r\n        numberButtonClicked: function(numberInput){\r\n            // check if the input field jquery object is null. if so, initialise it\r\n            if(!utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField){\r\n                // initialise the input property\r\n                utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField =\r\n                    $('#lock-screen-modal #lock-screen-lock-pin');\r\n            }\r\n\r\n            // hide the WRONG PIN message that may be displayed\r\n            $('#lock-screen-modal #lock-screen-message').css(\"visibility\", \"hidden\");\r\n\r\n            // update the security input field with the provided number input\r\n            utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField.\r\n            val(utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField.val() + numberInput);\r\n            // update the input field css text input style, so user can see the inputed number\r\n            $('input', utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField).\r\n            css('-webkit-text-security', 'none');\r\n\r\n            // clear any previous timeout that may have been set\r\n            window.clearTimeout(utopiasoftware.ally.controller.lockScreenModalViewModel.clearTimeoutId);\r\n\r\n            utopiasoftware.ally.controller.lockScreenModalViewModel.clearTimeoutId =\r\n                setTimeout(function(){ // wait for 1 second\r\n                    // update the input field css text input style, so user cannot see the inputed number\r\n                    $('input', utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField).\r\n                    css('-webkit-text-security', 'disc');\r\n                }, 1000);\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the exit button on the app security pin is clicked\r\n         */\r\n        exitButtonClicked: function(){\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"confirm\" button on the\r\n         * app security pin is clicked\r\n         */\r\n        confirmButtonClicked: function(){\r\n\r\n            // check if the input field jquery object is null. if so, initialise it\r\n            // check if the input field jquery object is null. if so, initialise it\r\n            if(!utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField){\r\n                // initialise the input property\r\n                utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField =\r\n                    $('#lock-screen-modal #lock-screen-lock-pin');\r\n            }\r\n\r\n            if(utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField.val() ===\r\n                utopiasoftware.ally.model.appSecurePin){ // authentication successful\r\n\r\n                $('#lock-screen-modal').get(0).hide(); // hide the security pin modal\r\n            }\r\n            else{ // authentication failed\r\n                $('#lock-screen-modal #lock-screen-message').css(\"visibility\", \"visible\");\r\n            }\r\n\r\n            // reset the input value of the security pin modal\r\n            utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField.val(\"\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the backspace button on the\r\n         * app security pin is clicked\r\n         */\r\n        backspaceButtonClicked: function(){\r\n\r\n            // check if the input field jquery object is null. if so, initialise it\r\n            if(!utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField){\r\n                // initialise the input property\r\n                utopiasoftware.ally.controller.lockScreenModalViewModel.$pinLockInputField =\r\n                    $('#lock-screen-modal #lock-screen-lock-pin');\r\n            }\r\n\r\n            var inputString = $('#lock-screen-modal #lock-screen-lock-pin').val(); // get the value from the input\r\n            // remove the last character from the input field\r\n            $('#lock-screen-modal #lock-screen-lock-pin').val(inputString.substring(0, inputString.length - 1));\r\n        },\r\n\r\n        /**\r\n         * method is used to prevent the device from displaying the content menu for\r\n         * devices\r\n         * @param event\r\n         * @returns {boolean}\r\n         */\r\n        preventContextMenuForInput: function(event){\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            return false;\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for main-menu page\r\n     */\r\n    mainMenuPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n            $('#menu-tabbar .tabbar__border').css(\"visibility\", \"hidden\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * method is used to track changes on the tabbar tabs\r\n         * @param event\r\n         */\r\n        tabbarPreChange(event){\r\n\r\n            // run the hide method of the payment page to ensure webpage is NOT transparent\r\n            utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.pageHide();\r\n            // proceed to to the 1st hidden tab on the payment page (i.e. reset payment)\r\n            $('#payments-page #payments-tabbar').get(0).setActiveTab(0);\r\n\r\n            // determine the tab that was clicked\r\n            switch(event.originalEvent.index){\r\n                case 0:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Dashboard\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 1:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Payments\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 2:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Wallet\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 3:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Transfers\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n\r\n                case 4:\r\n                    $('#menu-tabbar ons-tab').removeAttr(\"label\"); // remove all displaced labels\r\n\r\n                    $(event.originalEvent.tabItem).attr(\"label\", \"Account\"); // update the label of the to-be displayed tab\r\n\r\n                    break;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for onboarding page\r\n     */\r\n    onboardingPageViewModel: {\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                            buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to listen for click events of the \"Sign Up\" button\r\n         *\r\n         */\r\n        signupButtonClicked: function(){\r\n\r\n            $('#onboarding-navigator').get(0).pushPage(\"signup-page.html\", {}); // navigate to the signup page\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to listen for click events of the \"Login\" button\r\n         *\r\n         */\r\n        loginButtonClicked: function(){\r\n\r\n            $('ons-splitter').get(0).content.load('login-template'); // navigate to the login page\r\n\r\n\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides\r\n         * @param event\r\n         */\r\n        carouselPostChange(event){\r\n\r\n            // change the carousel counter indicator based on the currently active and previously active carousel slides\r\n            $('#onboarding-page .carousel-counter').eq(event.originalEvent.lastActiveIndex).removeClass('active');\r\n            $('#onboarding-page .carousel-counter').eq(event.originalEvent.activeIndex).addClass('active');\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for login page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the sign-in page\r\n         */\r\n        formValidator: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n\r\n                    $('ons-splitter').get(0).content.load('onboarding-template');\r\n                };\r\n\r\n                // check if the user is currently logged in\r\n                if(window.localStorage.getItem(\"app-status\") && window.localStorage.getItem(\"app-status\") != \"\"){ // user is logged in\r\n                    // display the user's save phone number on the login page phonenumber input\r\n                    $('#login-page #login-phone-number').val(window.localStorage.getItem(\"app-status\"));\r\n                }\r\n\r\n                // initialise the login form validation\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator = $('#login-form').parsley();\r\n\r\n                // attach listener for the log in button click event on the login page\r\n                $('#login-signin').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.ally.controller.loginPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.loginPageViewModel.loginFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the sign-in page\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the login page\r\n                $('#login-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#login-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the login page\r\n                utopiasoftware.ally.controller.loginPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when sign-in form is successfully validated\r\n         *\r\n         */\r\n        loginFormValidated: function(){\r\n\r\n            // check if Internet Connection is available AND if user has been logged in  before proceeding\r\n            if(navigator.connection.type === Connection.NONE &&\r\n                (window.localStorage.getItem(\"app-status\") && window.localStorage.getItem(\"app-status\") !== \"\")){\r\n                // no Internet Connection, but user has been previously logged in\r\n\r\n                // inform the user that cached data will be used for log in\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be used for log in\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // begin login process\r\n                Promise.resolve().\r\n                then(function(){\r\n                    // display the loader message to indicate that account is being created;\r\n                    $('#loader-modal-message').html(\"Completing User Login...\");\r\n                    return Promise.resolve($('#loader-modal').get(0).show()); // show loader\r\n                }).\r\n                then(function(){\r\n                    // get the log-in credentials from the form\r\n                    var formData = {\r\n                        lock: $('#login-page #login-pin').val(),\r\n                        phone: $('#login-page #login-phone-number').val().startsWith(\"0\") ?\r\n                            $('#login-page #login-phone-number').val().replace(\"0\", \"+234\"):$('#login-page #login-phone-number').val()\r\n                    };\r\n\r\n                    return formData;\r\n                }).\r\n                then(function(formData){ // check that the log-in credentials are valid\r\n                    if(formData.phone === utopiasoftware.ally.model.appUserDetails.phone &&\r\n                    formData.lock === utopiasoftware.ally.model.appSecurePin){ // user provided valid credentials\r\n                        // log user in\r\n                        return $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n                    }\r\n                    else { // user provided invalid credentials, so throw error\r\n                        throw \"Invalid phone number or PIN\";\r\n                    }\r\n                }).\r\n                then(function(){ // log in completed\r\n                    return Promise.all([$('#loader-modal').get(0).hide(),\r\n                        ons.notification.toast(\"Login complete! Welcome\", {timeout:3000})]);\r\n                }).\r\n                catch(function(err){\r\n                    if(typeof err !== \"string\"){ // if err is NOT a String\r\n                        err = \"Sorry. Login could not be completed\"\r\n                    }\r\n                    $('#loader-modal').get(0).hide(); // hide loader\r\n                    ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                    'style=\"color: red;\"></ons-icon> Log In Failed',\r\n                        messageHTML: '<span>' + err + '</span>',\r\n                        cancelable: false\r\n                    });\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // no internet connection to log user in remotely\r\n            if(navigator.connection.type === Connection.NONE){\r\n                // inform user of this\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"user cannot login to ALLY account without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                lock: $('#login-page #login-pin').val(),\r\n                phone: $('#login-page #login-phone-number').val().startsWith(\"0\") ?\r\n                    $('#login-page #login-phone-number').val().replace(\"0\", \"+234\"):$('#login-page #login-phone-number').val()\r\n            };\r\n\r\n\r\n            // begin login process\r\n            Promise.resolve().\r\n            then(function(){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#loader-modal-message').html(\"Completing User Login...\");\r\n                return Promise.resolve($('#loader-modal').get(0).show()); // show loader\r\n            }).\r\n            then(function(){ // clear all data belonging to previous user\r\n                var promisesArray = []; // holds all the Promise objects for all data being deleted\r\n\r\n                var promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user app details from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-details'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n\r\n                promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user secure pin from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-secure-pin'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n                // if the previously logged in user is NOT the same user trying to log in\r\n                if(window.localStorage.getItem(\"app-status\") != formData.phone){ // a different user from the stored user is loggin in\r\n                    // add the promise object used to delete the cached chart data\r\n                    promisesArray.push(utopiasoftware.ally.dashboardCharts.deleteWalletTransferInData(),\r\n                        utopiasoftware.ally.dashboardCharts.deleteWalletTransferOutData(),\r\n                        utopiasoftware.ally.dashboardCharts.deletePaymentOutData(),\r\n                        utopiasoftware.ally.dashboardCharts.deletePaymentInData(),\r\n                        utopiasoftware.ally.transactionHistoryCharts.deleteTransactionHistoryData());\r\n                }\r\n\r\n                // return promise when all operations have completed\r\n                return Promise.all(promisesArray);\r\n            }).\r\n            then(function(){\r\n                // if the previously logged in user is NOT the same user trying to log in\r\n                if(window.localStorage.getItem(\"app-status\") != formData.phone){ // a different user from the stored user is loggin in\r\n                    // clear all data in the device local/session storage\r\n                    window.localStorage.clear();\r\n                    window.sessionStorage.clear();\r\n                }\r\n                return null;\r\n            }).\r\n            then(function(){\r\n                // upload the user details to the server\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/login.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: formData\r\n                    }\r\n                ));\r\n\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var newUser = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                newUser._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(newUser.status == \"error\"){ // an error occured\r\n                    throw newUser.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // store user data\r\n                utopiasoftware.ally.model.appUserDetails = newUser; // store the user details\r\n\r\n                // store the user secure pin\r\n                utopiasoftware.ally.model.appSecurePin = formData.lock;\r\n\r\n                return newUser; // return user data\r\n\r\n            }).\r\n            then(function(newUser){\r\n                // create a cypher data of the user details & secure pin\r\n                return Promise.all([Promise.resolve(intel.security.secureData.\r\n                createFromData({\"data\": JSON.stringify(newUser)})),\r\n                    Promise.resolve(intel.security.secureData.\r\n                    createFromData({\"data\": utopiasoftware.ally.model.appSecurePin}))]);\r\n            }).\r\n            then(function(instanceIdArray){\r\n                // store the cyphered user data & secure pin in secure persistent storage\r\n                return Promise.all([Promise.resolve(\r\n                    intel.security.secureStorage.write({\"id\": \"ally-user-details\", \"instanceID\": instanceIdArray[0]})),\r\n                    Promise.resolve(\r\n                        intel.security.secureStorage.write({\"id\": \"ally-user-secure-pin\", \"instanceID\": instanceIdArray[1]}))]);\r\n            }).\r\n            then(function(){\r\n\r\n                // set app-status local storage (as user phone number)\r\n                window.localStorage.setItem(\"app-status\", utopiasoftware.ally.model.appUserDetails.phone);\r\n\r\n                // update the first name being displayed in the side menu\r\n                //$('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n\r\n                return $('#loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){ // navigate to the main menu page\r\n                return $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }).\r\n            then(function(){\r\n                ons.notification.toast(\"Login complete! Welcome\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Login could not be completed\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Log In Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for forgot-pin page\r\n     */\r\n    forgotPinPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n\r\n                    $('#login-navigator').get(0).popPage({});\r\n                };\r\n\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator = $('#forgot-pin-form').parsley();\r\n\r\n                // attach listener for the log in button click event on the login page\r\n                $('#forgot-pin-reset').get(0).onclick = function(){\r\n                    // run the validation method for the sign-in form\r\n                    utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for log in form field validation success event\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for log in form validation success\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.forgotPinPageViewModel.forgotPinFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n            try {\r\n                // remove any tooltip being displayed on all forms in the page\r\n                $('#forgot-pin-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#forgot-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object in the page\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms in the page\r\n                $('#forgot-pin-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#forgot-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects in the page\r\n                utopiasoftware.ally.controller.forgotPinPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         *\r\n         */\r\n        forgotPinFormValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY user secure PIN cannot be reset without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // prepare the form data to be submitted\r\n            var formData = {\r\n                phone: $('#forgot-pin-page #forgot-pin-phone-number').val().startsWith(\"0\") ?\r\n                    $('#forgot-pin-page #forgot-pin-phone-number').val().replace(\"0\", \"+234\"):\r\n                    $('#forgot-pin-page #forgot-pin-phone-number').val()\r\n            };\r\n\r\n            // display the loader message to indicate that account is being created;\r\n            $('#loader-modal-message').html(\"Resetting User PIN...\");\r\n\r\n            // begin pin reset process\r\n            Promise.resolve($('#loader-modal').get(0).show()). // show loader.\r\n            then(function(){\r\n                // upload the user details to the server\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/reset-password.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: formData\r\n                    }\r\n                ));\r\n\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the new user object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status == \"error\"){ // an error occurred\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // pin reset was successful, hide loader\r\n                return Promise.all([serverResponse, Promise.resolve($('#loader-modal').get(0).hide())])\r\n\r\n            }).\r\n            then(function(promiseArray){\r\n\r\n                // go back to the login page\r\n                return Promise.all([promiseArray[0], $('#login-navigator').get(0).popPage({})]);\r\n            }).\r\n            then(function(promiseArray){ // display a message to the user that the secure pin has been reset\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-check-circle\" size=\"32px\" ' +\r\n                'style=\"color: green;\"></ons-icon> PIN Reset Successful',\r\n                    messageHTML: `<span>${promiseArray[0].message}</span>`,\r\n                    cancelable: false\r\n                });\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. PIN reset failed. You can try again\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> PIN Reset Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for signup page\r\n     */\r\n    signupPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    // move to the onboarding page\r\n                    $('#onboarding-navigator').get(0).popPage({});\r\n                };\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator = $('#signup-form').parsley();\r\n\r\n                // attach listener for the sign up button on the page\r\n                $('#signup-signup-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.signupPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for log in form field validation failure event\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.signupPageViewModel.signupFormValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the signup page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#signup-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#signup-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the signup page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#signup-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#signup-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.signupPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-up form is successfully validated\r\n         */\r\n        signupFormValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY account cannot be created without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var createAcctFormData = {\r\n                firstName: $('#signup-page #signup-firstname').val(),\r\n                lastName: $('#signup-page #signup-lastname').val(),\r\n                lock: $('#signup-page #signup-secure-pin').val(),\r\n                phone: $('#signup-page #signup-phone-number').val().startsWith(\"0\") ?\r\n                    $('#signup-page #signup-phone-number').val().replace(\"0\", \"+234\"):$('#signup-page #signup-phone-number').val()\r\n            };\r\n\r\n\r\n            // tell the user that phone number verification is necessary\r\n            new Promise(function(resolve, reject){\r\n                ons.notification.confirm('To complete sign up, your phone number must be verified. <br>' +\r\n                        'Usual SMS charge from your phone network provider will apply.<br> ' +\r\n                        'Please ensure you have sufficient airtime to send/receive one SMS', {title: 'Verify Phone Number',\r\n                        buttonLabels: ['Cancel', 'Ok']}) // Ask for confirmation\r\n                    .then(function(index) {\r\n                        if (index === 1) { // OK button\r\n                            resolve();\r\n                        }\r\n                        else{\r\n                            reject(\"your phone number could not be verified\");\r\n                        }\r\n                    });\r\n            }).\r\n            then(function(){ // verify the user's phone number\r\n\r\n                //return null;\r\n                return utopiasoftware.ally.validatePhoneNumber($('#signup-page #signup-phone-number').val());\r\n            }).\r\n            then(function(){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#loader-modal-message').html(\"Completing Sign Up...\");\r\n                return Promise.resolve($('#loader-modal').get(0).show()); // show loader\r\n            }).\r\n            then(function(){ // clear all data belonging to previous user\r\n                var promisesArray = []; // holds all the Promise objects for all data being deleted\r\n\r\n                var promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user app details from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-details'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n\r\n                promiseObject = new Promise(function(resolve, reject){\r\n                    // delete the user secure pin from secure storage if it exists\r\n                    Promise.resolve(intel.security.secureStorage.\r\n                    delete({'id':'ally-user-secure-pin'})).\r\n                    then(function(){resolve();},function(){resolve();}); // ALWAYS resolve the promise\r\n                });\r\n\r\n                // add the promise object to the promise array\r\n                promisesArray.push(promiseObject);\r\n\r\n                // add the promise object used to delete the cached chart data\r\n                promisesArray.push(utopiasoftware.ally.dashboardCharts.deleteWalletTransferInData(),\r\n                    utopiasoftware.ally.dashboardCharts.deleteWalletTransferOutData(),\r\n                    utopiasoftware.ally.dashboardCharts.deletePaymentOutData(),\r\n                    utopiasoftware.ally.dashboardCharts.deletePaymentInData(),\r\n                    utopiasoftware.ally.transactionHistoryCharts.deleteTransactionHistoryData());\r\n\r\n                // return promise when all operations have completed\r\n                return Promise.all(promisesArray);\r\n            }).\r\n            then(function(){\r\n                // clear all data in the device local/session storage\r\n                window.localStorage.clear();\r\n                window.sessionStorage.clear();\r\n                return null;\r\n            }).\r\n            then(function(){\r\n                // upload the user details to the server\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/signup.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: createAcctFormData\r\n                    }\r\n                ));\r\n\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var newUser = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                newUser._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(newUser.status == \"error\"){ // an error occured\r\n                    throw newUser.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // store user data & secure pin\r\n                utopiasoftware.ally.model.appUserDetails = newUser;\r\n                utopiasoftware.ally.model.appSecurePin = createAcctFormData.lock;\r\n\r\n                return newUser;\r\n\r\n            }).\r\n            then(function(newUser){\r\n                // create a cypher data of the user details & secure pin\r\n                return Promise.all([Promise.resolve(intel.security.secureData.\r\n                createFromData({\"data\": JSON.stringify(newUser)})),\r\n                    Promise.resolve(intel.security.secureData.\r\n                    createFromData({\"data\": createAcctFormData.lock}))]);\r\n            }).\r\n            then(function(instanceIdArray){\r\n                // store the cyphered data & secure pin in secure persistent storage\r\n                return Promise.all([\r\n                    Promise.resolve(\r\n                    intel.security.secureStorage.write({\"id\": \"ally-user-details\", \"instanceID\": instanceIdArray[0]})),\r\n                    Promise.resolve(\r\n                        intel.security.secureStorage.write({\"id\": \"ally-user-secure-pin\", \"instanceID\": instanceIdArray[1]}))\r\n                ]);\r\n            }).\r\n            then(function(){\r\n\r\n                // set app-status local storage (as user phone number)\r\n                window.localStorage.setItem(\"app-status\", utopiasoftware.ally.model.appUserDetails.phone);\r\n\r\n                // update the first name being displayed in the side menu\r\n                //$('#side-menu-username').html(utopiasoftware.saveup.model.appUserDetails.firstName);\r\n\r\n                return $('#loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                return $('ons-splitter').get(0).content.load(\"app-main-template\");\r\n            }).\r\n            then(function(){\r\n                ons.notification.toast(\"Sign Up complete! Welcome\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Sign Up could not be completed\"\r\n                }\r\n                $('#loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Sign Up Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement){\r\n            if($(buttonElement).attr(\"data-ally-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $('#signup-secure-pin input').css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-ally-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $('#signup-secure-pin input').css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-ally-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to change the value for the Verify Phone Number based on the checkbox state.\r\n         * This change is used to enable validation for the input\r\n         *\r\n         * @param inputElement\r\n         */\r\n        verifyPhoneNumberClicked: function(inputElement){\r\n            if(inputElement.checked){ // input is checked\r\n                // update the input value\r\n                inputElement.value = \"checked\"\r\n            }\r\n            else{ // input is NOT checked\r\n                // reset the input value\r\n                inputElement.value = \"\"\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for dashboard page\r\n     */\r\n    dashboardPageViewModel: {\r\n\r\n\r\n        /**\r\n         * property is used to hold the \"Period Select\" dropdown list\r\n         */\r\n        periodDropDownListObject: null,\r\n\r\n        /**\r\n         * property is used to hold the \"Transfers In\" Chart\r\n         */\r\n        walletIncomingChart: null,\r\n\r\n        /**\r\n         * property is used to hold the \"Transfers Out\" Chart\r\n         */\r\n        walletOutgoingChart: null,\r\n\r\n\r\n        /**\r\n         * property is used to hold the \"Payments Out\" Chart\r\n         */\r\n        paymentsOutChart: null,\r\n\r\n        /**\r\n         * property is used to hold the \"Payments In\" Chart\r\n         */\r\n        paymentsInChart: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.dashboardPageViewModel.backButtonClicked;\r\n\r\n                // inject the the modules required to create various charts for the dashboard page\r\n                ej.charts.Chart.Inject(ej.charts.Legend, ej.charts.LineSeries, ej.charts.AreaSeries, ej.charts.DateTime,\r\n                ej.charts.Tooltip);\r\n\r\n                // initialise the DropDownList\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject =\r\n                    new ej.dropdowns.DropDownList({\r\n                        placeholder: \"Select Period\",\r\n                        floatLabelType: 'Auto'\r\n                    });\r\n\r\n                // add listener for when the value of the period dropdown list is changed\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject.\r\n                    addEventListener(\"change\", function(){\r\n                    // call the method used to ujpdate all charts on the dashboard.\r\n                    // Provide the currently selected value of the eriod dropdown list\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.refreshDashboardCharts(this.value);\r\n                });\r\n\r\n                // render initialized DropDownList\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject.\r\n                appendTo('#dashboard-period-select');\r\n\r\n                // update the wallet balance dashboard\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.updateWalletDashboard();\r\n\r\n                // update the wallet-incoming chart using the value of the select Period dropdown list\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.\r\n                updateWalletIncomingDashboard(utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject.value);\r\n\r\n                // update the wallet-outgoing chart using the value of the select Period dropdown list\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.\r\n                updateWalletOutgoingDashboard(utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject.value);\r\n\r\n                // update the payments-out chart using the value of the select Period dropdown list\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.\r\n                updatePaymentOutDashboard(utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject.value);\r\n\r\n                // update the payments-in chart using the value of the select Period dropdown list\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.\r\n                updatePaymentInDashboard(utopiasoftware.ally.controller.dashboardPageViewModel.periodDropDownListObject.value);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // stop the rotating animation on main menu page\r\n            //$('.rotating-infinite-ease-in-1').addClass('rotating-infinite-ease-in-1-paused');\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                    buttonLabels: ['No', 'Yes']}) // Ask for confirmation\r\n                .then(function(index) {\r\n                    if (index === 1) { // OK button\r\n                        navigator.app.exitApp(); // Close the app\r\n                    }\r\n                });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to update the ALLY Wallet Balance on the dashboard\r\n         */\r\n        updateWalletDashboard: function() {\r\n\r\n            // create an object that contains the balance of the user wallet\r\n            var tempObj = {balance: 0};\r\n\r\n             // show appropriate loader\r\n            $('#dashboard-ally-wallet-loader').css(\"display\", \"inline-block\");\r\n            $('#dashboard-ally-wallet').css(\"display\", \"none\");\r\n            $('#dashboard-ally-wallet').html(\"&#8358;\" + \"0\");\r\n            $('#dashboard-ally-wallet-last-updated').html(\"\");\r\n\r\n            // try to retrieve user updated wallet details\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-profile.php\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var userDetailsData = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                userDetailsData._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(userDetailsData.status == \"error\"){ // an error occurred\r\n                    throw userDetailsData.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return userDetailsData;\r\n\r\n            }, function(){\r\n                return utopiasoftware.ally.loadUserCachedAppDetails();\r\n            }).\r\n            then(function(userDetailsData){\r\n\r\n                // save the user details in the local app data and also cache it\r\n                utopiasoftware.ally.model.appUserDetails = userDetailsData;\r\n                return utopiasoftware.ally.saveUserAppDetails(userDetailsData);\r\n            }).\r\n            then(function(userDetailsData){\r\n\r\n                var walletElement = $('#dashboard-ally-wallet'); // holds the wallet element\r\n\r\n                anime({\r\n                    targets: tempObj,\r\n                    balance: userDetailsData.balance,\r\n                    duration: 1200,\r\n                    easing: 'linear',\r\n                    begin: function(){\r\n                        $('#dashboard-ally-wallet-loader').css(\"display\", \"none\");\r\n                        walletElement.css(\"display\", \"inline-block\");\r\n                    },\r\n                    update: function() {\r\n                        walletElement.html(\"&#8358;\" + tempObj.balance);\r\n                    },\r\n                    complete: function(){\r\n                        walletElement.html(\"&#8358;\" + kendo.toString(kendo.parseFloat(tempObj.balance), \"n2\"));\r\n                        $('#dashboard-ally-wallet-last-updated').\r\n                        html(kendo.toString(new Date(userDetailsData._lastUpdatedDate), \"MMM d yyyy, h:mmtt\"));\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * update the wallet transfer-in dashboard. Either using cached data or remote data\r\n         *\r\n         * @param periodType\r\n         */\r\n        updateWalletIncomingDashboard: function(periodType){\r\n\r\n            // variable holds the object that contains the customisable settings for the chart created based on the 'periodType' parameter\r\n            var chartCustomisableSettings = null;\r\n\r\n            switch(periodType){ // check the periodType parameter and format chartCutomisableSetting accordingly\r\n\r\n                case \"today\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers In (Today)\",\r\n                        labelFormat: 'ha',\r\n                        intervalType: 'Hours'};\r\n                    break;\r\n\r\n                case \"weekly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers In (Last 7 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n\r\n                case \"monthly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers In (Last 30 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n            }\r\n\r\n            // check if the walletIncoming Chart has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.dashboardPageViewModel.walletIncomingChart){ // chart has previously been created\r\n                // destroy the chart object\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.walletIncomingChart.destroy();\r\n            }\r\n\r\n            // display chart loading indicator\r\n            $('#dashboard-page #dashboard-wallet-incoming-chart').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Wallet Transfers In\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.dashboardCharts.loadWalletTransferInData().\r\n                then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                    // format the chart data array so it can be properly used\r\n                    return chartDataMapping(chartDataArray[periodType]);\r\n                }).\r\n                then(function(chartDataArray){\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.walletIncomingChart =\r\n                        new ej.charts.Chart({\r\n                            // Width and height for chart in pixel\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                            palettes: [\"#30A401\"],\r\n                            title: chartCustomisableSettings.chartTitle,\r\n                            titleStyle: {\r\n                                size: '1em'\r\n                            },\r\n                            tooltip: { enable: true,\r\n                                format: 'Amount: ${point.y}'\r\n                            },\r\n                            // Legend for chart\r\n                            legendSettings: {\r\n                                visible: true\r\n                            },\r\n                            primaryXAxis: {\r\n                                title: 'Time (GMT +1)',\r\n                                valueType: 'DateTime',\r\n                                labelFormat: chartCustomisableSettings.labelFormat,\r\n                                intervalType: chartCustomisableSettings.intervalType,\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            primaryYAxis: {\r\n                                title: 'Amount in thousands (N)',\r\n                                valueType: 'Double',\r\n                                labelFormat: '{value}k',\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            series: [{\r\n                                dataSource: chartDataArray,\r\n                                width: 2,\r\n                                marker: {visible: true, width: 8, height:8},\r\n                                xName: 'DDATE', yName: 'AMOUNT',\r\n                                name: 'Incoming Transfers',\r\n                                //Series type as line\r\n                                type: 'Line'\r\n                            }]\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#dashboard-page #dashboard-wallet-incoming-chart').html(\"\");\r\n                    //append the newly created chart\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.walletIncomingChart.\r\n                    appendTo('#dashboard-wallet-incoming-chart');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet transfer-in data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/chart-transfer-in.php\",\r\n                    //url: \"in-wallet-chart-dummy.json\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone, duration: periodType} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.dashboardCharts.loadWalletTransferInData()]);\r\n            }).\r\n            then(function(chartDataArray){ // save the chart array data to cache\r\n                chartDataArray[1] = chartDataArray[1];\r\n                chartDataArray[1][periodType] = chartDataArray[0];\r\n                return utopiasoftware.ally.dashboardCharts.saveWalletTransferInData(chartDataArray[1]);\r\n            }).\r\n            then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                // format the chart data array so it can be properly used\r\n                return chartDataMapping(chartDataArray[periodType]);\r\n            }).\r\n            then(function(chartDataArray){\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.walletIncomingChart =\r\n                    new ej.charts.Chart({\r\n                        // Width and height for chart in pixel\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                        palettes: [\"#30A401\"],\r\n                        title: chartCustomisableSettings.chartTitle,\r\n                        titleStyle: {\r\n                            size: '1em'\r\n                        },\r\n                        tooltip: { enable: true,\r\n                            format: 'Amount: ${point.y}'\r\n                        },\r\n                        // Legend for chart\r\n                        legendSettings: {\r\n                            visible: true\r\n                        },\r\n                        primaryXAxis: {\r\n                            title: 'Time (GMT +1)',\r\n                            valueType: 'DateTime',\r\n                            labelFormat: chartCustomisableSettings.labelFormat,\r\n                            intervalType: chartCustomisableSettings.intervalType,\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        primaryYAxis: {\r\n                            title: 'Amount in thousands (N)',\r\n                            valueType: 'Double',\r\n                            labelFormat: '{value}k',\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            dataSource: chartDataArray,\r\n                            width: 2,\r\n                            marker: {visible: true, width: 8, height:8},\r\n                            xName: 'DDATE', yName: 'AMOUNT',\r\n                            name: 'Incoming Transfers',\r\n                            //Series type as line\r\n                            type: 'Line'\r\n                        }]\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#dashboard-page #dashboard-wallet-incoming-chart').html(\"\");\r\n                //append the newly created chart\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.walletIncomingChart.\r\n                appendTo('#dashboard-wallet-incoming-chart');\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the chart data into an appropriate forma that can be displayed inby the chart\r\n             * @param chartDataArray {Array} array containing chart data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the chart\r\n             */\r\n            function chartDataMapping(chartDataArray){\r\n                return chartDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = (kendo.parseFloat(dataObject.AMOUNT)) / 1000; // divide amount by 1000\r\n                    dataObject.DDATE = kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * update the wallet transfer-in dashboard. Either using cached data or remote data\r\n         *\r\n         * @param periodType\r\n         */\r\n        updateWalletOutgoingDashboard: function(periodType){\r\n\r\n            // variable holds the object that contains the customisable settings for the chart created based on the 'periodType' parameter\r\n            var chartCustomisableSettings = null;\r\n\r\n            switch(periodType){ // check the periodType parameter and format chartCutomisableSetting accordingly\r\n\r\n                case \"today\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers Out (Today)\",\r\n                        labelFormat: 'ha',\r\n                        intervalType: 'Hours'};\r\n                    break;\r\n\r\n                case \"weekly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers Out (Last 7 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n\r\n                case \"monthly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers Out (Last 30 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n            }\r\n\r\n            // check if the walletOutgoing Chart has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.dashboardPageViewModel.walletOutgoingChart){ // chart has previously been created\r\n                // destroy the chart object\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.walletOutgoingChart.destroy();\r\n            }\r\n\r\n            // display chart loading indicator\r\n            $('#dashboard-page #dashboard-wallet-outgoing-chart').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Wallet Transfers Out\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.dashboardCharts.loadWalletTransferOutData().\r\n                then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                    // format the chart data array so it can be properly used\r\n                    return chartDataMapping(chartDataArray[periodType]);\r\n                }).\r\n                then(function(chartDataArray){\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.walletOutgoingChart =\r\n                        new ej.charts.Chart({\r\n                            // Width and height for chart in pixel\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                            palettes: [\"#0FD0D0\"],\r\n                            title: chartCustomisableSettings.chartTitle,\r\n                            titleStyle: {\r\n                                size: '1em'\r\n                            },\r\n                            tooltip: { enable: true,\r\n                                format: 'Amount: ${point.y}'\r\n                            },\r\n                            // Legend for chart\r\n                            legendSettings: {\r\n                                visible: true\r\n                            },\r\n                            primaryXAxis: {\r\n                                title: 'Time (GMT +1)',\r\n                                valueType: 'DateTime',\r\n                                labelFormat: chartCustomisableSettings.labelFormat,\r\n                                intervalType: chartCustomisableSettings.intervalType,\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            primaryYAxis: {\r\n                                title: 'Amount in thousands (N)',\r\n                                valueType: 'Double',\r\n                                labelFormat: '{value}k',\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            series: [{\r\n                                dataSource: chartDataArray,\r\n                                width: 2,\r\n                                marker: {visible: true, width: 8, height:8},\r\n                                xName: 'DDATE', yName: 'AMOUNT',\r\n                                name: 'Outgoing Transfers',\r\n                                //Series type as line\r\n                                type: 'Line'\r\n                            }]\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#dashboard-page #dashboard-wallet-outgoing-chart').html(\"\");\r\n                    //append the newly created chart\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.walletOutgoingChart.\r\n                    appendTo('#dashboard-wallet-outgoing-chart');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet transfer-in data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/chart-transfer-out.php\",\r\n                    //url: \"in-wallet-chart-dummy.json\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone, duration: periodType} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.dashboardCharts.loadWalletTransferOutData()]);\r\n            }).\r\n            then(function(chartDataArray){ // save the chart array data to cache\r\n                chartDataArray[1] = chartDataArray[1];\r\n                chartDataArray[1][periodType] = chartDataArray[0];\r\n                return utopiasoftware.ally.dashboardCharts.saveWalletTransferOutData(chartDataArray[1]);\r\n            }).\r\n            then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                // format the chart data array so it can be properly used\r\n                return chartDataMapping(chartDataArray[periodType]);\r\n            }).\r\n            then(function(chartDataArray){\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.walletOutgoingChart =\r\n                    new ej.charts.Chart({\r\n                        // Width and height for chart in pixel\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                        palettes: [\"#0FD0D0\"],\r\n                        title: chartCustomisableSettings.chartTitle,\r\n                        titleStyle: {\r\n                            size: '1em'\r\n                        },\r\n                        tooltip: { enable: true,\r\n                            format: 'Amount: ${point.y}'\r\n                        },\r\n                        // Legend for chart\r\n                        legendSettings: {\r\n                            visible: true\r\n                        },\r\n                        primaryXAxis: {\r\n                            title: 'Time (GMT +1)',\r\n                            valueType: 'DateTime',\r\n                            labelFormat: chartCustomisableSettings.labelFormat,\r\n                            intervalType: chartCustomisableSettings.intervalType,\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        primaryYAxis: {\r\n                            title: 'Amount in thousands (N)',\r\n                            valueType: 'Double',\r\n                            labelFormat: '{value}k',\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            dataSource: chartDataArray,\r\n                            width: 2,\r\n                            marker: {visible: true, width: 8, height:8},\r\n                            xName: 'DDATE', yName: 'AMOUNT',\r\n                            name: 'Outgoing Transfers',\r\n                            //Series type as line\r\n                            type: 'Line'\r\n                        }]\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#dashboard-page #dashboard-wallet-outgoing-chart').html(\"\");\r\n                //append the newly created chart\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.walletOutgoingChart.\r\n                appendTo('#dashboard-wallet-outgoing-chart');\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the chart data into an appropriate forma that can be displayed inby the chart\r\n             * @param chartDataArray {Array} array containing chart data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the chart\r\n             */\r\n            function chartDataMapping(chartDataArray){\r\n                return chartDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = (kendo.parseFloat(dataObject.AMOUNT)) / 1000; // divide amount by 1000\r\n                    dataObject.DDATE = kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * update the wallet payment-out dashboard. Either using cached data or remote data\r\n         *\r\n         * @param periodType\r\n         */\r\n        updatePaymentOutDashboard: function(periodType){\r\n\r\n            // variable holds the object that contains the customisable settings for the chart created based on the 'periodType' parameter\r\n            var chartCustomisableSettings = null;\r\n\r\n            switch(periodType){ // check the periodType parameter and format chartCutomisableSetting accordingly\r\n\r\n                case \"today\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments Out (Today)\",\r\n                        labelFormat: 'ha',\r\n                        intervalType: 'Hours'};\r\n                    break;\r\n\r\n                case \"weekly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments Out (Last 7 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n\r\n                case \"monthly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments Out (Last 30 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n            }\r\n\r\n            // check if the walletIncoming Chart has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.dashboardPageViewModel.paymentsOutChart){ // chart has previously been created\r\n                // destroy the chart object\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.paymentsOutChart.destroy();\r\n            }\r\n\r\n            // display chart loading indicator\r\n            $('#dashboard-page #dashboard-wallet-payments-out-chart').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Wallet Payments Out\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.dashboardCharts.loadPaymentOutData().\r\n                then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                    // format the chart data array so it can be properly used\r\n                    return chartDataMapping(chartDataArray[periodType]);\r\n                }).\r\n                then(function(chartDataArray){\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.paymentsOutChart =\r\n                        new ej.charts.Chart({\r\n                            // Width and height for chart in pixel\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                            palettes: [\"#30A401\"],\r\n                            title: chartCustomisableSettings.chartTitle,\r\n                            titleStyle: {\r\n                                size: '1em'\r\n                            },\r\n                            tooltip: { enable: true,\r\n                                format: 'Amount: ${point.y}'\r\n                            },\r\n                            // Legend for chart\r\n                            legendSettings: {\r\n                                visible: true\r\n                            },\r\n                            primaryXAxis: {\r\n                                title: 'Time (GMT +1)',\r\n                                valueType: 'DateTime',\r\n                                labelFormat: chartCustomisableSettings.labelFormat,\r\n                                intervalType: chartCustomisableSettings.intervalType,\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            primaryYAxis: {\r\n                                title: 'Amount in thousands (N)',\r\n                                valueType: 'Double',\r\n                                labelFormat: '{value}k',\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            series: [{\r\n                                dataSource: chartDataArray,\r\n                                width: 2,\r\n                                marker: {visible: true, width: 8, height:8},\r\n                                xName: 'DDATE', yName: 'AMOUNT',\r\n                                name: 'Outgoing Payments',\r\n                                //Series type as line\r\n                                type: 'Area'\r\n                            }]\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#dashboard-page #dashboard-wallet-payments-out-chart').html(\"\");\r\n                    //append the newly created chart\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.paymentsOutChart.\r\n                    appendTo('#dashboard-wallet-payments-out-chart');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet payments-out data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/chart-payment-out.php\",\r\n                    //url: \"in-wallet-chart-dummy.json\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone, duration: periodType} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.dashboardCharts.loadPaymentOutData()]);\r\n            }).\r\n            then(function(chartDataArray){ // save the chart array data to cache\r\n                chartDataArray[1] = chartDataArray[1];\r\n                chartDataArray[1][periodType] = chartDataArray[0];\r\n                return utopiasoftware.ally.dashboardCharts.savePaymentOutData(chartDataArray[1]);\r\n            }).\r\n            then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                // format the chart data array so it can be properly used\r\n                return chartDataMapping(chartDataArray[periodType]);\r\n            }).\r\n            then(function(chartDataArray){\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.paymentsOutChart =\r\n                    new ej.charts.Chart({\r\n                        // Width and height for chart in pixel\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                        palettes: [\"#30A401\"],\r\n                        title: chartCustomisableSettings.chartTitle,\r\n                        titleStyle: {\r\n                            size: '1em'\r\n                        },\r\n                        tooltip: { enable: true,\r\n                            format: 'Amount: ${point.y}'\r\n                        },\r\n                        // Legend for chart\r\n                        legendSettings: {\r\n                            visible: true\r\n                        },\r\n                        primaryXAxis: {\r\n                            title: 'Time (GMT +1)',\r\n                            valueType: 'DateTime',\r\n                            labelFormat: chartCustomisableSettings.labelFormat,\r\n                            intervalType: chartCustomisableSettings.intervalType,\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        primaryYAxis: {\r\n                            title: 'Amount in thousands (N)',\r\n                            valueType: 'Double',\r\n                            labelFormat: '{value}k',\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            dataSource: chartDataArray,\r\n                            width: 2,\r\n                            marker: {visible: true, width: 8, height:8},\r\n                            xName: 'DDATE', yName: 'AMOUNT',\r\n                            name: 'Outgoing Payments',\r\n                            //Series type as line\r\n                            type: 'Area'\r\n                        }]\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#dashboard-page #dashboard-wallet-payments-out-chart').html(\"\");\r\n                //append the newly created chart\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.paymentsOutChart.\r\n                appendTo('#dashboard-wallet-payments-out-chart');\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the chart data into an appropriate forma that can be displayed inby the chart\r\n             * @param chartDataArray {Array} array containing chart data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the chart\r\n             */\r\n            function chartDataMapping(chartDataArray){\r\n                return chartDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = (kendo.parseFloat(dataObject.AMOUNT)) / 1000; // divide amount by 1000\r\n                    dataObject.DDATE = kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * update the wallet payment-in dashboard. Either using cached data or remote data\r\n         *\r\n         * @param periodType\r\n         */\r\n        updatePaymentInDashboard: function(periodType){\r\n\r\n            // variable holds the object that contains the customisable settings for the chart created based on the 'periodType' parameter\r\n            var chartCustomisableSettings = null;\r\n\r\n            switch(periodType){ // check the periodType parameter and format chartCutomisableSetting accordingly\r\n\r\n                case \"today\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments In (Today)\",\r\n                        labelFormat: 'ha',\r\n                        intervalType: 'Hours'};\r\n                    break;\r\n\r\n                case \"weekly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments In (Last 7 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n\r\n                case \"monthly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments In (Last 30 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n            }\r\n\r\n            // check if the walletIncoming Chart has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.dashboardPageViewModel.paymentsInChart){ // chart has previously been created\r\n                // destroy the chart object\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.paymentsInChart.destroy();\r\n            }\r\n\r\n            // display chart loading indicator\r\n            $('#dashboard-page #dashboard-wallet-payments-in-chart').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Wallet Payments In\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.dashboardCharts.loadPaymentInData().\r\n                then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                    // format the chart data array so it can be properly used\r\n                    return chartDataMapping(chartDataArray[periodType]);\r\n                }).\r\n                then(function(chartDataArray){\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.paymentsInChart =\r\n                        new ej.charts.Chart({\r\n                            // Width and height for chart in pixel\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                            palettes: [\"#0FD0D0\"],\r\n                            title: chartCustomisableSettings.chartTitle,\r\n                            titleStyle: {\r\n                                size: '1em'\r\n                            },\r\n                            tooltip: { enable: true,\r\n                                format: 'Amount: ${point.y}'\r\n                            },\r\n                            // Legend for chart\r\n                            legendSettings: {\r\n                                visible: true\r\n                            },\r\n                            primaryXAxis: {\r\n                                title: 'Time (GMT +1)',\r\n                                valueType: 'DateTime',\r\n                                labelFormat: chartCustomisableSettings.labelFormat,\r\n                                intervalType: chartCustomisableSettings.intervalType,\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            primaryYAxis: {\r\n                                title: 'Amount in thousands (N)',\r\n                                valueType: 'Double',\r\n                                labelFormat: '{value}k',\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            series: [{\r\n                                dataSource: chartDataArray,\r\n                                width: 2,\r\n                                marker: {visible: true, width: 8, height:8},\r\n                                xName: 'DDATE', yName: 'AMOUNT',\r\n                                name: 'Incoming Payments',\r\n                                //Series type as line\r\n                                type: 'Area'\r\n                            }]\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#dashboard-page #dashboard-wallet-payments-in-chart').html(\"\");\r\n                    //append the newly created chart\r\n                    utopiasoftware.ally.controller.dashboardPageViewModel.paymentsInChart.\r\n                    appendTo('#dashboard-wallet-payments-in-chart');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet payments-in data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/chart-payment-in.php\",\r\n                    //url: \"in-wallet-chart-dummy.json\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone, duration: periodType} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.dashboardCharts.loadPaymentInData()]);\r\n            }).\r\n            then(function(chartDataArray){ // save the chart array data to cache\r\n                chartDataArray[1] = chartDataArray[1];\r\n                chartDataArray[1][periodType] = chartDataArray[0];\r\n                return utopiasoftware.ally.dashboardCharts.savePaymentInData(chartDataArray[1]);\r\n            }).\r\n            then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                // format the chart data array so it can be properly used\r\n                return chartDataMapping(chartDataArray[periodType]);\r\n            }).\r\n            then(function(chartDataArray){\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.paymentsInChart =\r\n                    new ej.charts.Chart({\r\n                        // Width and height for chart in pixel\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                        palettes: [\"#0FD0D0\"],\r\n                        title: chartCustomisableSettings.chartTitle,\r\n                        titleStyle: {\r\n                            size: '1em'\r\n                        },\r\n                        tooltip: { enable: true,\r\n                            format: 'Amount: ${point.y}'\r\n                        },\r\n                        // Legend for chart\r\n                        legendSettings: {\r\n                            visible: true\r\n                        },\r\n                        primaryXAxis: {\r\n                            title: 'Time (GMT +1)',\r\n                            valueType: 'DateTime',\r\n                            labelFormat: chartCustomisableSettings.labelFormat,\r\n                            intervalType: chartCustomisableSettings.intervalType\r\n                        },\r\n                        primaryYAxis: {\r\n                            title: 'Amount in thousands (N)',\r\n                            valueType: 'Double',\r\n                            labelFormat: '{value}k'\r\n                        },\r\n                        series: [{\r\n                            dataSource: chartDataArray,\r\n                            width: 2,\r\n                            marker: {visible: true, width: 8, height:8},\r\n                            xName: 'DDATE', yName: 'AMOUNT',\r\n                            name: 'Incoming Payments',\r\n                            //Series type as line\r\n                            type: 'Area'\r\n                        }]\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#dashboard-page #dashboard-wallet-payments-in-chart').html(\"\");\r\n                //append the newly created chart\r\n                utopiasoftware.ally.controller.dashboardPageViewModel.paymentsInChart.\r\n                appendTo('#dashboard-wallet-payments-in-chart');\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the chart data into an appropriate forma that can be displayed inby the chart\r\n             * @param chartDataArray {Array} array containing chart data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the chart\r\n             */\r\n            function chartDataMapping(chartDataArray){\r\n                return chartDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = (kendo.parseFloat(dataObject.AMOUNT)) / 1000; // divide amount by 1000\r\n                    dataObject.DDATE = kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to request a refresh of all chars on the dashboard page\r\n         *\r\n         * @param periodType {String} the time period for which the chars sghould be refreshed\r\n         */\r\n        refreshDashboardCharts: function(periodType){\r\n\r\n            // update the wallet-incoming chart using the value of the select Period dropdown list\r\n            utopiasoftware.ally.controller.dashboardPageViewModel.\r\n            updateWalletIncomingDashboard(periodType);\r\n\r\n            // update the wallet-outgoing chart using the value of the select Period dropdown list\r\n            utopiasoftware.ally.controller.dashboardPageViewModel.\r\n            updateWalletOutgoingDashboard(periodType);\r\n\r\n            // update the payments-out chart using the value of the select Period dropdown list\r\n            utopiasoftware.ally.controller.dashboardPageViewModel.\r\n            updatePaymentOutDashboard(periodType);\r\n\r\n            // update the payments-in chart using the value of the select Period dropdown list\r\n            utopiasoftware.ally.controller.dashboardPageViewModel.\r\n            updatePaymentInDashboard(periodType);\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for account page\r\n     */\r\n    accountPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.accountPageViewModel.backButtonClicked;\r\n\r\n                $('#account-preloading-fab', $thisPage).css(\"display\", \"inline-block\"); // display page preloader\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator = $('#account-page #account-form').parsley();\r\n\r\n                // listen for form field validation failure event\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.accountPageViewModel.accountFormValidated);\r\n\r\n                // load the user data\r\n                utopiasoftware.ally.controller.accountPageViewModel.loadUserAccountData().\r\n                then(function(userDetails){ // save the returned user details in app cache\r\n                    return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n                }).\r\n                then(function(userDetails){ // update the page with the collect data details\r\n\r\n                    // update user data on app\r\n                    utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                    $('#account-wallet-balance', $thisPage).\r\n                    html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n                    $('#account-last-updated', $thisPage).\r\n                    html(kendo.toString(new Date(userDetails._lastUpdatedDate), \"MMM d yyyy, h:mmtt\"));\r\n                    $('#account-firstname', $thisPage).val(userDetails.firstname);\r\n                    $('#account-lastname', $thisPage).val(userDetails.lastname);\r\n                    $('#account-phone-number', $thisPage).val(userDetails.phone);\r\n                    $('#account-email', $thisPage).val((userDetails.email && userDetails.email != \"\") ? userDetails.email : \"\");\r\n\r\n                    // display the necessary page components\r\n                    $('#account-list', $thisPage).css(\"display\", \"block\");\r\n                    $('#account-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n                    $('#account-edit-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide necessary page components\r\n                    $('#account-save', $thisPage).css(\"display\", \"none\");\r\n                    $('#account-page-error', $thisPage).css(\"display\", \"none\");\r\n                    // hide page preloader\r\n                    $('#account-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }).\r\n                catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                    // hide the necessary page components\r\n                    $('#account-list', $thisPage).css(\"display\", \"none\");\r\n                    $('#account-save', $thisPage).css(\"display\", \"none\");\r\n                    $('#account-edit-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // display necessary page components\r\n                    $('#account-page-error', $thisPage).css(\"display\", \"block\");\r\n                    $('#account-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide page preloader\r\n                    $('#account-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#account-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator objects on the page\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#account-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#account-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.accountPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // check if the menu tabbar exists\r\n            if($('#menu-tabbar').get(0)){ // the menu tabbar object exists\r\n                // move to the previous tab\r\n                $('#menu-tabbar').get(0).setActiveTab(3);\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Edit Account fab button is clicked\r\n         */\r\n        editAccountButtonClicked(){\r\n\r\n            // remove the the readonly attributes, so the form  elements can be editable\r\n            $('#account-page [data-ally-readonly-field]').removeAttr('readonly');\r\n            // hide the edit account button\r\n            $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n            // show the save account button\r\n            $('#account-page #account-save').css(\"display\", \"inline-block\");\r\n            // display the instruction for running the account edit\r\n            ons.notification.toast(\"you can edit your account\", {timeout:3000});\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Refresh Account fab button is clicked\r\n         */\r\n        refreshAccountButtonClicked(){\r\n\r\n            // add the the readonly attributes, so the form  elements cannot be editable\r\n            $('#account-page [data-ally-readonly-field]').attr('readonly', true);\r\n            // hide the edit account button\r\n            $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n            // hide the save account button\r\n            $('#account-page #account-save').css(\"display\", \"none\");\r\n            // remove any tooltip being displayed on all forms on the page\r\n            $('#account-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n            $('#account-page [data-hint]').removeAttr(\"data-hint\");\r\n            // reset the form validator objects on the page\r\n            utopiasoftware.ally.controller.accountPageViewModel.formValidator.reset();\r\n\r\n            // display the page preloader\r\n            $('#account-page #account-preloading-fab').css(\"display\", \"inline-block\");\r\n\r\n            // load the user data\r\n            utopiasoftware.ally.controller.accountPageViewModel.loadUserAccountData().\r\n            then(function(userDetails){ // save the returned user details in app cache\r\n                return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n            }).\r\n            then(function(userDetails){ // update the page with the collected data details\r\n\r\n                // update user data on app\r\n                utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                $('#account-page #account-wallet-balance').\r\n                html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n                $('#account-page #account-last-updated').\r\n                html(kendo.toString(new Date(userDetails._lastUpdatedDate), \"MMM d yyyy, h:mmtt\"));\r\n                $('#account-page #account-firstname').val(userDetails.firstname);\r\n                $('#account-page #account-lastname').val(userDetails.lastname);\r\n                $('#account-page #account-phone-number').val(userDetails.phone);\r\n                $('#account-page #account-email').val((userDetails.email && userDetails.email != \"\") ? userDetails.email : \"\");\r\n\r\n                // display the necessary page components\r\n                $('#account-page #account-list').css(\"display\", \"block\");\r\n                $('#account-page #account-reload-fab').css(\"display\", \"inline-block\");\r\n                $('#account-page #account-edit-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide necessary page components\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n                $('#account-page #account-page-error').css(\"display\", \"none\");\r\n                // hide page preloader\r\n                $('#account-page #account-preloading-fab').css(\"display\", \"none\");\r\n\r\n            }).\r\n            catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                // hide the necessary page components\r\n                $('#account-page #account-list').css(\"display\", \"none\");\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n                $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n\r\n                // display necessary page components\r\n                $('#account-page #account-page-error').css(\"display\", \"block\");\r\n                $('#account-page #account-reload-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#account-page #account-preloading-fab').css(\"display\", \"none\");\r\n\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Save Account fab button is clicked\r\n         */\r\n        saveAccountButtonClicked(){\r\n\r\n            // run the validation method for the sign-in form\r\n            utopiasoftware.ally.controller.accountPageViewModel.formValidator.whenValidate();\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when form is successfully validated\r\n         */\r\n        accountFormValidated(){\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY account cannot be updated without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // ask user for secure PIN before proceeding. secure pin MUST match\r\n            ons.notification.prompt({title: '<ons-icon icon=\"ion-lock-combination\" size=\"28px\" ' +\r\n            'style=\"color: #30a401;\"></ons-icon> Security Check', id: \"pin-security-check\",\r\n                messageHTML: '<div><span>' +\r\n                'Please enter your ALLY Secure PIN to proceed</span></div>',\r\n                cancelable: true, placeholder: \"Secure PIN\", inputType: \"number\", defaultValue: \"\", autofocus: false,\r\n                submitOnEnter: true\r\n            }).\r\n            then(function(userInput){ // collect user secure PIN and submit the rest of the form data\r\n\r\n                // add the the readonly attributes, so the form  elements cannot be editable\r\n                $('#account-page [data-ally-readonly-field]').attr('readonly', true);\r\n                // hide the edit account button\r\n                $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n                // hide the save account button\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n\r\n\r\n                // create the form data to be submitted\r\n                var formData = {\r\n                    firstName: $('#account-page #account-firstname').val(),\r\n                    lastName: $('#account-page #account-lastname').val(),\r\n                    lock: userInput,\r\n                    phone: $('#account-page #account-phone-number').val(),\r\n                    email: $('#account-page #account-email').val()\r\n                };\r\n\r\n\r\n                // display the loader message to indicate that account is being created;\r\n                $('#hour-glass-loader-modal .modal-message').html(\"Saving Account Details...\");\r\n                // forward the form data &show loader\r\n                return Promise.all([formData, Promise.resolve($('#hour-glass-loader-modal').get(0).show())]);\r\n\r\n            }).\r\n            then(function(dataArray){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/update-profile.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: dataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponseText){\r\n                serverResponseText +=  \"\";\r\n                var userAcctDetails = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                // add a timestamp for the last time user details was updated\r\n                userAcctDetails._lastUpdatedDate = Date.now();\r\n\r\n                // check if any error occurred\r\n                if(userAcctDetails.status == \"error\"){ // an error occured\r\n                    throw userAcctDetails.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return utopiasoftware.ally.saveUserAppDetails(userAcctDetails); // cache the returned account details\r\n            }).\r\n            then(function(userAcctDetails){\r\n               // update the user data on the app\r\n                utopiasoftware.ally.model.appUserDetails = userAcctDetails;\r\n                return userAcctDetails;\r\n            }).\r\n            then(function(){\r\n\r\n                // display the necessary page components\r\n                $('#account-page #account-list').css(\"display\", \"block\");\r\n                $('#account-page #account-reload-fab').css(\"display\", \"inline-block\");\r\n                $('#account-page #account-edit-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide necessary page components\r\n                $('#account-page #account-save').css(\"display\", \"none\");\r\n                $('#account-page #account-page-error').css(\"display\", \"none\");\r\n                // hide page preloader\r\n                $('#account-page #account-preloading-fab').css(\"display\", \"none\");\r\n\r\n                return $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                // populate the payments-out chart\r\n                //utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.updatePaymentOutChart('today');\r\n\r\n                // send push notification that account was updated\r\n                let pushNotification = { // create the push notification object\r\n                    \"app_id\": \"d5d2bdba-eec0-46b1-836e-c5b8e318e928\",\r\n                    \"filters\": [{\"field\": \"tag\", \"key\": \"phone\", \"relation\": \"=\", \"value\":\r\n                    utopiasoftware.ally.model.appUserDetails.phone}],\r\n                    \"contents\": {\"en\": \"Your ALLY account details were just updated\"},\r\n                    \"headings\": {\"en\": \"Account Updated\"},\r\n                    \"android_channel_id\": \"605bcdb3-611b-4aed-ba02-7e33c3d50542\",\r\n                    \"android_visibility\": 1,\r\n                    \"priority\": 10\r\n                };\r\n\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: \"https://onesignal.com/api/v1/notifications\",\r\n                        type: \"post\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic MmQ3ODcwZGUtYmIyYS00NzY5LWIwZWQtMTk5ZGRjNzU2M2Q3\");\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(pushNotification)\r\n                    }\r\n                ));\r\n\r\n                // display toast to user that account was updated\r\n                ons.notification.toast(\"Account Details Updated!\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Your account details could not be updated. Please retry\"\r\n                }\r\n\r\n                // remove the readonly attributes, so the form  elements can be editable\r\n                $('#account-page [data-ally-readonly-field]').removeAttr('readonly', true);\r\n                // hide the edit account button\r\n                $('#account-page #account-edit-fab').css(\"display\", \"none\");\r\n                // show the save account button\r\n                $('#account-page #account-save').css(\"display\", \"inline-block\");\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Account Update Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to load the user account data either from\r\n         * the locally cached data OR directly from the remote server\r\n         */\r\n        loadUserAccountData(){\r\n            return new Promise(function(resolve, reject){\r\n\r\n                // check if there is internet connection\r\n                if(navigator.connection.type === Connection.NONE){ // no internet connection\r\n                    // inform the user that cached data will be displayed in the absence of internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#008000',\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n                    // no internet connection, so use local cache of data\r\n                    resolve(utopiasoftware.ally.loadUserCachedAppDetails());\r\n                }\r\n                else{ // there's internet, so make request for new data\r\n\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-profile.php\",\r\n                            type: \"post\",\r\n                            contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                            },\r\n                            dataType: \"text\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {phone: utopiasoftware.ally.model.appUserDetails.phone} // data to submit to server\r\n                        }\r\n                    )).\r\n                    then(function(serverResponseText){\r\n                        serverResponseText +=  \"\";\r\n                        var userDetailsData = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                        // add a timestamp for the last time user details was updated\r\n                        userDetailsData._lastUpdatedDate = Date.now();\r\n\r\n                        // check if any error occurred\r\n                        if(userDetailsData.status == \"error\"){ // an error occurred\r\n                            throw userDetailsData.message; // throw the error message attached to this error\r\n                        }\r\n\r\n\r\n                        resolve(userDetailsData); // return user data and resolve the Promise\r\n\r\n                    }).catch(function(err){\r\n                        reject(err); // reject the Promise error\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for wallet page\r\n     */\r\n    walletPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.walletPageViewModel.backButtonClicked;\r\n\r\n                $('#wallet-preloading-fab', $thisPage).css(\"display\", \"inline-block\"); // display page preloader\r\n\r\n                // load the user data\r\n                utopiasoftware.ally.controller.walletPageViewModel.loadUserAccountData().\r\n                then(function(userDetails){ // save the returned user details in app cache\r\n                    return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n                }).\r\n                then(function(userDetails){ // update the page with the collect data details\r\n\r\n                    // update user data on app\r\n                    utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                    $('#wallet-balance', $thisPage).\r\n                    html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n\r\n                    $('#wallet-owner-name', $thisPage).html(userDetails.firstname + \" \" + userDetails.lastname);\r\n\r\n                    // display the necessary page components\r\n                    $('#wallet-list', $thisPage).css(\"display\", \"block\");\r\n                    $('#wallet-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide page preloader\r\n                    $('#wallet-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                }).\r\n                catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                    // display the necessary page components\r\n                    $('#wallet-list', $thisPage).css(\"display\", \"block\");\r\n\r\n                    // display necessary page components\r\n                    $('#wallet-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                    // hide page preloader\r\n                    $('#wallet-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // check if the user triggered a page refresh\r\n            if($('#app-main-navigator').get(0).topPage.data.refresh !== true){ // page refresh was NOT triggered\r\n                return; // exit\r\n            }\r\n\r\n            // a page refresh was triggered, so begin refresh the wallet page content\r\n\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n\r\n            $('#wallet-preloading-fab', $thisPage).css(\"display\", \"inline-block\"); // display page preloader\r\n\r\n            // hide the necessary page components\r\n            $('#wallet-list', $thisPage).css(\"display\", \"none\");\r\n\r\n            // load the user data\r\n            utopiasoftware.ally.controller.walletPageViewModel.loadUserAccountData().\r\n            then(function(userDetails){ // save the returned user details in app cache\r\n                return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n            }).\r\n            then(function(userDetails){ // update the page with the collect data details\r\n\r\n                // update user data on app\r\n                utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                $('#wallet-balance', $thisPage).\r\n                html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n\r\n                $('#wallet-owner-name', $thisPage).html(userDetails.firstname + \" \" + userDetails.lastname);\r\n\r\n                // display the necessary page components\r\n                $('#wallet-list', $thisPage).css(\"display\", \"block\");\r\n                $('#wallet-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#wallet-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n            }).\r\n            catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                // display the necessary page components\r\n                $('#wallet-list', $thisPage).css(\"display\", \"block\");\r\n\r\n                // display necessary page components\r\n                $('#wallet-reload-fab', $thisPage).css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#wallet-preloading-fab', $thisPage).css(\"display\", \"none\");\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // check if the menu tabbar exists\r\n            if($('#menu-tabbar').get(0)){ // the menu tabbar object exists\r\n                // move to the previous tab\r\n                $('#menu-tabbar').get(0).setActiveTab(1);\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the Refresh Account fab button is clicked\r\n         */\r\n        refreshAccountButtonClicked(){\r\n\r\n            // display the page preloader\r\n            $('#wallet-page #wallet-preloading-fab').css(\"display\", \"inline-block\");\r\n\r\n            // load the user data\r\n            utopiasoftware.ally.controller.walletPageViewModel.loadUserAccountData().\r\n            then(function(userDetails){ // save the returned user details in app cache\r\n                return utopiasoftware.ally.saveUserAppDetails(userDetails);\r\n            }).\r\n            then(function(userDetails){ // update the page with the collected data details\r\n\r\n                // update user data on app\r\n                utopiasoftware.ally.model.appUserDetails = userDetails;\r\n\r\n                $('#wallet-page #wallet-balance').\r\n                html(kendo.toString(kendo.parseFloat(userDetails.balance), \"n2\"));\r\n\r\n                $('#wallet-page #wallet-owner-name').html(userDetails.firstname + \" \" + userDetails.lastname);\r\n\r\n                // display the necessary page components\r\n                $('#wallet-page #wallet-list').css(\"display\", \"block\");\r\n                $('#wallet-page #wallet-reload-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#wallet-page #wallet-preloading-fab').css(\"display\", \"none\");\r\n\r\n            }).\r\n            catch(function(){ // an error occurred when trying to load the user data\r\n\r\n                // display the necessary page components\r\n                $('#wallet-page #wallet-list').css(\"display\", \"none\");\r\n\r\n                // display necessary page components\r\n                $('#wallet-page #wallet-reload-fab').css(\"display\", \"inline-block\");\r\n\r\n                // hide page preloader\r\n                $('#wallet-page #wallet-preloading-fab').css(\"display\", \"none\");\r\n\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is used to load the user account data either from\r\n         * the locally cached data OR directly from the remote server\r\n         */\r\n        loadUserAccountData(){\r\n            return new Promise(function(resolve, reject){\r\n\r\n                // check if there is internet connection\r\n                if(navigator.connection.type === Connection.NONE){ // no internet connection\r\n                    // inform the user that cached data will be displayed in the absence of internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#008000',\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n                    // no internet connection, so use local cache of data\r\n                    resolve(utopiasoftware.ally.loadUserCachedAppDetails());\r\n                }\r\n                else{ // there's internet, so make request for new data\r\n\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-profile.php\",\r\n                            type: \"post\",\r\n                            contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                            },\r\n                            dataType: \"text\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: {phone: utopiasoftware.ally.model.appUserDetails.phone} // data to submit to server\r\n                        }\r\n                    )).\r\n                    then(function(serverResponseText){\r\n                        serverResponseText +=  \"\";\r\n                        var userDetailsData = JSON.parse(serverResponseText.trim()); // get the new user object\r\n                        // add a timestamp for the last time user details was updated\r\n                        userDetailsData._lastUpdatedDate = Date.now();\r\n\r\n                        // check if any error occurred\r\n                        if(userDetailsData.status == \"error\"){ // an error occurred\r\n                            throw userDetailsData.message; // throw the error message attached to this error\r\n                        }\r\n\r\n\r\n                        resolve(userDetailsData); // return user data and resolve the Promise\r\n\r\n                    }).catch(function(err){\r\n                        reject(err); // reject the Promise error\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for fund-wallet page\r\n     */\r\n    fundWalletPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        amountFieldValidator: null,\r\n\r\n        /**\r\n         * used to hold the Card Number DropDownList component\r\n         */\r\n        cardDropDownList: null,\r\n\r\n        /**\r\n         * * used to hold the ej Tooltip component\r\n         */\r\n        formTooltip: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.backButtonClicked;\r\n\r\n                // display the page preloader\r\n                $('.page-preloader', $thisPage).css('display', \"block\");\r\n\r\n                // hide the form\r\n                $('#fund-wallet-form', $thisPage).css('display', \"none\");\r\n\r\n                // initialise the card DropDown widget\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList =  new ej.dropdowns.DropDownList({\r\n                    //set the data to dataSource property\r\n                    dataSource: [],\r\n                    fields: {text: 'CARDNUMBER2', value: 'CARDNUMBER2'},\r\n                    placeholder: \"Select Card\",\r\n                    floatLabelType: \"Auto\",\r\n                    popupHeight: \"300px\"\r\n                });\r\n\r\n                // render initialized card DropDownList\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.appendTo('#fund-wallet-card-number');\r\n\r\n                // initialise form tooltips\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formTooltip = new ej.popups.Tooltip({\r\n                    target: '.ally-input-tooltip',\r\n                    position: 'top center',\r\n                    cssClass: 'ally-input-tooltip',\r\n                    opensOn: 'focus'\r\n                });\r\n\r\n                // render the initialized form tooltip\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formTooltip.appendTo('#fund-wallet-form');\r\n\r\n                // initialise the amount field\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.amountFieldValidator =\r\n                    $('#fund-wallet-amount').parsley({\r\n                        value: function(parsley) {\r\n                            // convert the amount back to a plain text without the thousand separator\r\n                            let parsedNumber = kendo.parseFloat($('#fund-wallet-amount', $thisPage).val());\r\n                            return (parsedNumber ? parsedNumber : $('#fund-wallet-amount', $thisPage).val());\r\n                        }\r\n                    });\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator = $('#fund-wallet-form').parsley();\r\n\r\n                // attach listener for the fund wallet button on the page\r\n                $('#fund-wallet-fund-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for the form field validation failure event\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                    $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                    $(fieldInstance.$element).removeAttr(\"title\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.formValidated);\r\n\r\n\r\n                // create the form data to be sent\r\n                var formData = {phone: utopiasoftware.ally.model.appUserDetails.phone};\r\n\r\n                // get the collection of stored/tokenised cards\r\n                Promise.resolve(formData).\r\n                then(function(){\r\n                    // submit the form data\r\n                    return Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-my-cards.php\",\r\n                            type: \"post\",\r\n                            contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                            },\r\n                            dataType: \"text\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: formData // data to submit to server\r\n                        }\r\n                    ));\r\n                }).\r\n                then(function(serverResponse){\r\n                    serverResponse +=  \"\";\r\n                    serverResponse = JSON.parse(serverResponse.trim()); // get the response object\r\n                    return serverResponse; // forward the server response i.e. collection of tokenised cards\r\n                }).\r\n                then(function(cardCollectionArray){\r\n\r\n                    // initialise the card DropDown widget\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.dataSource = cardCollectionArray;\r\n\r\n                    // bind the new update to the dropdown list\r\n                    utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.dataBind();\r\n\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css('display', \"none\");\r\n\r\n                    // display the form\r\n                    $('#fund-wallet-form', $thisPage).css('display', \"block\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n\r\n                }).\r\n                catch(function(){\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css('display', \"none\");\r\n\r\n                    // display the form\r\n                    $('#fund-wallet-form', $thisPage).css('display', \"block\");\r\n\r\n                    // inform the user that they cannot proceed without Internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"some content could be loaded without an Internet Connection\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#ff0000', //red\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#fund-wallet-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#fund-wallet-page [title]').removeAttr(\"title\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#fund-wallet-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"title\");\r\n                $('#fund-wallet-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formValidator.destroy();\r\n                // destroy other form components\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.destroy();\r\n                utopiasoftware.ally.controller.fundWalletPageViewModel.formTooltip.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY wallet cannot be funded without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                firstname: utopiasoftware.ally.model.appUserDetails.firstname,\r\n                lastname: utopiasoftware.ally.model.appUserDetails.lastname,\r\n                phone: utopiasoftware.ally.model.appUserDetails.phone,\r\n                email: utopiasoftware.ally.model.appUserDetails.email ? utopiasoftware.ally.model.appUserDetails.email : \"\",\r\n                cardno: utopiasoftware.ally.controller.fundWalletPageViewModel.cardDropDownList.value,\r\n                amount: kendo.parseFloat($('#fund-wallet-page #fund-wallet-amount').val())\r\n            };\r\n\r\n            // display the loader message to indicate that account is being created;\r\n            $('#hour-glass-loader-modal .modal-message').html(\"Funding User Wallet...\");\r\n            // forward the form data & show loader\r\n            Promise.all([formData, Promise.resolve($('#hour-glass-loader-modal').get(0).show())]).\r\n            then(function(dataArray){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/rave-payment-using-token.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: dataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the response object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status != \"success\"){ // an error occured\r\n                    throw serverResponse.message || serverResponse.data.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the server response\r\n            }).\r\n            then(function(serverResponse){\r\n                // hide the loader\r\n                return Promise.all([serverResponse, $('#hour-glass-loader-modal').get(0).hide()]);\r\n            }).\r\n            then(function(responseArray){\r\n                // ask user for transaction otp\r\n                return Promise.all([responseArray[0], ons.notification.alert({title: '<ons-icon icon=\"md-check-circle\" size=\"32px\" ' +\r\n                    'style=\"color: green;\"></ons-icon> Wallet Funded',\r\n                    messageHTML: `<span>FUNDING FEE: ${kendo.toString(kendo.parseFloat(responseArray[0].data.appfee), 'n2')}<br>\r\n                    AMOUNT CHARGED: ${kendo.toString(kendo.parseFloat(responseArray[0].data.charged_amount), 'n2')}</span>`,\r\n                    cancelable: false\r\n                })]);\r\n            }).\r\n            then(function(){\r\n                hockeyapp.trackEvent(function(){}, function(){}, \"WALLET FUNDED\"); // track wallet funding\r\n                return Promise.all([ons.notification.toast(\"Wallet Funded Successfully!\", {timeout:4000}),\r\n                    $('#app-main-navigator').get(0).popPage({data: {refresh: true}})]);\r\n\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Your ALLY wallet could not be funded. Please retry\"\r\n                }\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Wallet Funding Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // remove this page form the main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for Add Card page\r\n     */\r\n    addCardPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to validate the card number field\r\n         */\r\n        cardNumberFieldValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        amountFieldValidator: null,\r\n\r\n        /**\r\n         * used to hold the ej library card masked text input\r\n         */\r\n        cardMaskedTextInput: null,\r\n\r\n        /**\r\n         * used to hold the ej library card month dropdown list component\r\n         */\r\n        cardMonthDropDownList: null,\r\n\r\n        /**\r\n         * used to hold the ej library card year dropdown list component\r\n         */\r\n        cardYearDropDownList: null,\r\n\r\n        /**\r\n         * * used to hold the ej Tooltip component\r\n         */\r\n        formTooltip: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.addCardPageViewModel.backButtonClicked;\r\n\r\n\r\n\r\n                // initialise the card masked input widget\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardMaskedTextInput =  new ej.inputs.MaskedTextBox({\r\n                    mask: '0000 0000 0000 0000 99999',\r\n                    placeholder: \"Card Number\",\r\n                    promptChar: '*',\r\n                    floatLabelType: \"Always\"\r\n                });\r\n\r\n                // render initialized card masked input widget\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardMaskedTextInput.appendTo('#add-card-card-number');\r\n\r\n                // initialise the card month DropDown widget\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardMonthDropDownList =\r\n                    new ej.dropdowns.DropDownList({\r\n                    dataSource: [{value: \"01\", displayText: \"01\"},\r\n                        {value: \"02\", displayText: \"02\"},\r\n                        {value: \"03\", displayText: \"03\"},\r\n                        {value: \"04\", displayText: \"04\"},\r\n                        {value: \"05\", displayText: \"05\"},\r\n                        {value: \"06\", displayText: \"06\"},\r\n                        {value: \"07\", displayText: \"07\"},\r\n                        {value: \"08\", displayText: \"08\"},\r\n                        {value: \"09\", displayText: \"09\"},\r\n                        {value: \"10\", displayText: \"10\"},\r\n                        {value: \"11\", displayText: \"11\"},\r\n                        {value: \"12\", displayText: \"12\"}],\r\n                        fields: {text: 'displayText', value: 'value'},\r\n                    placeholder: \"Expiry Month\",\r\n                    floatLabelType: \"Auto\"\r\n                });\r\n\r\n                // render the initialized card month dropdown list\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardMonthDropDownList.appendTo('#add-card-expiry-month');\r\n\r\n                // initialise the array to hold the valid card expiry years\r\n                var cardYearsArray = [];\r\n                var yearOption = (new Date()).getFullYear(); // get the current year\r\n                // add the current year as an object in the cardYearsArray\r\n                cardYearsArray.push({value: (\"\" + yearOption).substring(2,4), displayText: yearOption});\r\n\r\n                // add 3 more years to the cardYearsArray for the Card Expiry Year\r\n                for(var index = 0; index < 3; index++){\r\n                    // increase the yearOption by 1\r\n                    yearOption += 1;\r\n                    // add the additional year as an object in the cardYearsArray\r\n                    cardYearsArray.push({value: (\"\" + yearOption).substring(2,4), displayText: yearOption});\r\n                }\r\n\r\n                // initialise the card expiry year DropDown widget\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardYearDropDownList =\r\n                    new ej.dropdowns.DropDownList({\r\n                        dataSource: cardYearsArray,\r\n                        fields: {text: 'displayText', value: 'value'},\r\n                        placeholder: \"Expiry Year\",\r\n                        floatLabelType: \"Auto\"\r\n                    });\r\n\r\n                // render the initialized card expiry year dropdown list\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardYearDropDownList.appendTo('#add-card-expiry-year');\r\n\r\n\r\n                // initialise form tooltips\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formTooltip = new ej.popups.Tooltip({\r\n                    target: '.ally-input-tooltip',\r\n                    position: 'top center',\r\n                    cssClass: 'ally-input-tooltip',\r\n                    opensOn: 'focus'\r\n                });\r\n\r\n                // render the initialized form tooltip\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formTooltip.appendTo('#add-card-form');\r\n\r\n                // initialise the card number field validator\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardNumberFieldValidator =\r\n                    $('#add-card-card-number').parsley({\r\n                        value: function(parsley) {\r\n                            // return the unmasked input from the card number field\r\n                            return utopiasoftware.ally.controller.addCardPageViewModel.cardMaskedTextInput.value;\r\n                        }\r\n                    });\r\n\r\n                // initialise the amount field\r\n                utopiasoftware.ally.controller.addCardPageViewModel.amountFieldValidator =\r\n                    $('#add-card-charge-amount').parsley({\r\n                        value: function(parsley) {\r\n                            // convert the amount back to a plain text without the thousand separator\r\n                            let parsedNumber = kendo.parseFloat($('#add-card-charge-amount', $thisPage).val());\r\n                            return (parsedNumber ? parsedNumber : $('#add-card-charge-amount', $thisPage).val());\r\n                        }\r\n                    });\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formValidator = $('#add-card-form').parsley();\r\n\r\n                // attach listener for the fund wallet button on the page\r\n                $('#add-card-fund-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.addCardPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for the form field validation failure event\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                    $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                    $(fieldInstance.$element).removeAttr(\"title\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.addCardPageViewModel.formValidated);\r\n\r\n                // display the form\r\n                $('#add-card-form', $thisPage).css(\"display\", \"block\");\r\n                // hide the preloader\r\n                $('.page-preloader', $thisPage).css(\"display\", \"none\");\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#add-card-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#add-card-page [title]').removeAttr(\"title\");\r\n                $('#add-card-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#add-card-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#add-card-page [title]').removeAttr(\"title\");\r\n                $('#add-card-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardNumberFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.addCardPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formValidator.destroy();\r\n                // destroy other form components\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardMaskedTextInput.destroy();\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardMonthDropDownList.destroy();\r\n                utopiasoftware.ally.controller.addCardPageViewModel.cardYearDropDownList.destroy();\r\n                utopiasoftware.ally.controller.addCardPageViewModel.formTooltip.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY wallet cannot be saved without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                firstName: utopiasoftware.ally.model.appUserDetails.firstname,\r\n                lastName: utopiasoftware.ally.model.appUserDetails.lastname,\r\n                phone: utopiasoftware.ally.model.appUserDetails.phone,\r\n                email: utopiasoftware.ally.model.appUserDetails.email ? utopiasoftware.ally.model.appUserDetails.email : \"\",\r\n                cardno: utopiasoftware.ally.controller.addCardPageViewModel.cardMaskedTextInput.value,\r\n                cvv: $('#add-card-page #add-card-cvv').val(),\r\n                expirymonth: utopiasoftware.ally.controller.addCardPageViewModel.cardMonthDropDownList.value,\r\n                expiryyear: utopiasoftware.ally.controller.addCardPageViewModel.cardYearDropDownList.value,\r\n                pin: $('#add-card-page #add-card-pin').val(),\r\n                amount: kendo.parseFloat($('#add-card-page #add-card-charge-amount').val())\r\n            };\r\n\r\n            // display the loader message to indicate that account is being created;\r\n            $('#hour-glass-loader-modal .modal-message').html(\"Funding User Wallet...\");\r\n            // forward the form data & show loader\r\n            Promise.all([formData, Promise.resolve($('#hour-glass-loader-modal').get(0).show())]).\r\n            then(function(dataArray){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/rave-card-payment.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: dataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the response object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status != \"success\"){ // an error occured\r\n                    throw serverResponse.message || serverResponse.data.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the server response\r\n            }).\r\n            then(function(serverResponse){\r\n                // hide the loader\r\n                return Promise.all([serverResponse, $('#hour-glass-loader-modal').get(0).hide()]);\r\n            }).\r\n            then(function(responseArray){\r\n                // ask user for transaction otp\r\n                return Promise.all([responseArray[0], ons.notification.prompt({title: \"OTP Confirmation\",\r\n                    messageHTML: `<div><ons-icon icon=\"md-ally-icon-otp\" size=\"24px\"\r\n                    style=\"color: #30a401; float: left; width: 26px;\"></ons-icon>\r\n                    <span style=\"float: right; width: calc(100% - 26px);\">\r\n                    FUNDING FEE: ${kendo.toString(kendo.parseFloat(responseArray[0].data.appfee), 'n2')}<br>\r\n                    AMOUNT TO CHARGE: ${kendo.toString(kendo.parseFloat(responseArray[0].data.charged_amount), 'n2')}<br>\r\n                    Confirm Transaction by providing OTP sent to your phone or generated by your bank token</span></div>`,\r\n                    cancelable: false, placeholder: \"OTP\", inputType: \"number\", defaultValue: \"\", autofocus: false,\r\n                    submitOnEnter: true\r\n                })]);\r\n            }).\r\n            then(function(responseArray){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#hour-glass-loader-modal .modal-message').html(\"Authorizing Wallet Fund...\");\r\n                return Promise.all([...responseArray, $('#hour-glass-loader-modal').get(0).show()])\r\n            }).\r\n            then(function(responseArray){\r\n\r\n                // create the data object to be sent\r\n                var submitData = {raverefid: responseArray[0].data.flwRef, otp: responseArray[1],\r\n                    phone: utopiasoftware.ally.model.appUserDetails.phone};\r\n                submitData.savecard = $('#add-card-page #add-card-save-card-details').get(0).checked;\r\n\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/rave-approve-card-payment-via-otp.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: submitData // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the new user object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status == \"error\"){ // an error occured\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n                return Promise.all([ons.notification.toast(\"Wallet Funded Successfully!\", {timeout:4000}),\r\n                    $('#app-main-navigator').get(0).popPage({data: {refresh: true}})]);\r\n\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Your ALLY wallet could not be funded. Please retry\"\r\n                }\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Wallet Funding Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // remove this page form the main navigator stack\r\n            $('#app-main-navigator').get(0).replacePage('fund-wallet-page.html', {animation: 'fade-md'});\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for wallet-transfer page\r\n     */\r\n    walletTransferPageViewModel: {\r\n\r\n        /**\r\n         * property is used to hold the \"Transfers Out\" Chart\r\n         */\r\n        transfersOutChart: null,\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        amountFieldValidator: null,\r\n\r\n\r\n        /**\r\n         * * used to hold the ej Tooltip component\r\n         */\r\n        formTooltip: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.backButtonClicked;\r\n\r\n                // update the transfers-out chart\r\n                //utopiasoftware.ally.controller.walletTransferPageViewModel.updateTransfersOutChart('today');\r\n\r\n                // attach listen for when the 'wallet-transfer-add-recipient-button' is clicked\r\n                $('#wallet-transfer-add-recipient-button').get(0).onclick =\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.pickContactButtonClicked;\r\n\r\n                // display the page preloader\r\n                $('.page-preloader', $thisPage).css('display', \"block\");\r\n\r\n                // hide the form\r\n                $('#wallet-transfer-form', $thisPage).css('display', \"none\");\r\n\r\n\r\n                // start a promise chain to setup the page\r\n                Promise.resolve({}).\r\n                then(function(){\r\n                    // initialise the amount field\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.amountFieldValidator =\r\n                        $('#wallet-transfer-amount').parsley({\r\n                            value: function(parsley) {\r\n                                // convert the amount back to a plain text without the thousand separator\r\n                                let parsedNumber = kendo.parseFloat($('#wallet-transfer-amount', $thisPage).val());\r\n                                return (parsedNumber ? parsedNumber : $('#wallet-transfer-amount', $thisPage).val());\r\n                            }\r\n                        });\r\n\r\n                    // initialise the form validation\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator = $('#wallet-transfer-form').parsley();\r\n\r\n                    // attach listener for the wallet-transfer button on the page\r\n                    $('#wallet-transfer-transfer-button').get(0).onclick = function(){\r\n                        // run the validation method for the form\r\n                        utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.whenValidate();\r\n                    };\r\n\r\n                    // listen for the form field validation failure event\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                        // get the element that triggered the field validation error and use it to display tooltip\r\n                        // display tooltip\r\n                        $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                        $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                        $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                    });\r\n\r\n                    // listen for the form field validation success event\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                        // remove tooltip from element\r\n                        $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                        $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                        $(fieldInstance.$element).removeAttr(\"title\");\r\n                    });\r\n\r\n                    // listen for the form validation success\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.on('form:success',\r\n                        utopiasoftware.ally.controller.walletTransferPageViewModel.formValidated);\r\n\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css('display', \"none\");\r\n\r\n                    // display the form\r\n                    $('#wallet-transfer-form', $thisPage).css('display', \"block\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n\r\n                }).\r\n                catch(function(){\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css('display', \"none\");\r\n\r\n                    // display the form\r\n                    $('#wallet-transfer-form', $thisPage).css('display', \"block\");\r\n\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#wallet-transfer-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#wallet-transfer-page [title]').removeAttr(\"title\");\r\n                $('#wallet-transfer-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#wallet-transfer-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#wallet-transfer-page [data-hint]').removeAttr(\"title\");\r\n                $('#wallet-transfer-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.walletTransferPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * update the wallet transfer-in chart. Either using cached data or remote data\r\n         *\r\n         * @param periodType\r\n         */\r\n        updateTransfersOutChart: function(periodType){\r\n\r\n            // variable holds the object that contains the customisable settings for the chart created based on the 'periodType' parameter\r\n            var chartCustomisableSettings = null;\r\n\r\n            switch(periodType){ // check the periodType parameter and format chartCutomisableSetting accordingly\r\n\r\n                case \"today\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers Out (Today)\",\r\n                        labelFormat: 'ha',\r\n                        intervalType: 'Hours'};\r\n                    break;\r\n\r\n                case \"weekly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers Out (Last 7 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n\r\n                case \"monthly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Transfers Out (Last 30 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n            }\r\n\r\n            // check if the walletOutgoing Chart has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.walletTransferPageViewModel.transfersOutChart){ // chart has previously been created\r\n                // destroy the chart object\r\n                utopiasoftware.ally.controller.walletTransferPageViewModel.transfersOutChart.destroy();\r\n            }\r\n\r\n            // display chart loading indicator\r\n            $('#wallet-transfer-page #wallet-transfer-transfers-out-chart').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Wallet Transfers Out\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.dashboardCharts.loadWalletTransferOutData().\r\n                then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                    // format the chart data array so it can be properly used\r\n                    return chartDataMapping(chartDataArray[periodType]);\r\n                }).\r\n                then(function(chartDataArray){\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.transfersOutChart =\r\n                        new ej.charts.Chart({\r\n                            // Width and height for chart in pixel\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                            palettes: [\"#30A401\"],\r\n                            title: chartCustomisableSettings.chartTitle,\r\n                            titleStyle: {\r\n                                size: '1em'\r\n                            },\r\n                            tooltip: { enable: true,\r\n                                format: 'Amount: ${point.y}'\r\n                            },\r\n                            // Legend for chart\r\n                            legendSettings: {\r\n                                visible: true\r\n                            },\r\n                            primaryXAxis: {\r\n                                title: 'Time (GMT +1)',\r\n                                valueType: 'DateTime',\r\n                                labelFormat: chartCustomisableSettings.labelFormat,\r\n                                intervalType: chartCustomisableSettings.intervalType,\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            primaryYAxis: {\r\n                                title: 'Amount in thousands (N)',\r\n                                valueType: 'Double',\r\n                                labelFormat: '{value}k',\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            series: [{\r\n                                dataSource: chartDataArray,\r\n                                width: 2,\r\n                                marker: {visible: true, width: 8, height:8},\r\n                                xName: 'DDATE', yName: 'AMOUNT',\r\n                                name: 'Outgoing Transfers',\r\n                                //Series type as line\r\n                                type: 'Line'\r\n                            }]\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#wallet-transfer-page #wallet-transfer-transfers-out-chart').html(\"\");\r\n                    //append the newly created chart\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.transfersOutChart.\r\n                    appendTo('#wallet-transfer-transfers-out-chart');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet transfer-in data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/chart-transfer-out.php\",\r\n                    //url: \"in-wallet-chart-dummy.json\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone, duration: periodType} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.dashboardCharts.loadWalletTransferOutData()]);\r\n            }).\r\n            then(function(chartDataArray){ // save the chart array data to cache\r\n                chartDataArray[1] = chartDataArray[1];\r\n                chartDataArray[1][periodType] = chartDataArray[0];\r\n                return utopiasoftware.ally.dashboardCharts.saveWalletTransferOutData(chartDataArray[1]);\r\n            }).\r\n            then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                // format the chart data array so it can be properly used\r\n                return chartDataMapping(chartDataArray[periodType]);\r\n            }).\r\n            then(function(chartDataArray){\r\n                utopiasoftware.ally.controller.walletTransferPageViewModel.transfersOutChart =\r\n                    new ej.charts.Chart({\r\n                        // Width and height for chart in pixel\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                        palettes: [\"#30A401\"],\r\n                        title: chartCustomisableSettings.chartTitle,\r\n                        titleStyle: {\r\n                            size: '1em'\r\n                        },\r\n                        tooltip: { enable: true,\r\n                            format: 'Amount: ${point.y}'\r\n                        },\r\n                        // Legend for chart\r\n                        legendSettings: {\r\n                            visible: true\r\n                        },\r\n                        primaryXAxis: {\r\n                            title: 'Time (GMT +1)',\r\n                            valueType: 'DateTime',\r\n                            labelFormat: chartCustomisableSettings.labelFormat,\r\n                            intervalType: chartCustomisableSettings.intervalType,\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        primaryYAxis: {\r\n                            title: 'Amount in thousands (N)',\r\n                            valueType: 'Double',\r\n                            labelFormat: '{value}k',\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            dataSource: chartDataArray,\r\n                            width: 2,\r\n                            marker: {visible: true, width: 8, height:8},\r\n                            xName: 'DDATE', yName: 'AMOUNT',\r\n                            name: 'Outgoing Transfers',\r\n                            //Series type as line\r\n                            type: 'Line'\r\n                        }]\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#wallet-transfer-page #wallet-transfer-transfers-out-chart').html(\"\");\r\n                //append the newly created chart\r\n                utopiasoftware.ally.controller.walletTransferPageViewModel.transfersOutChart.\r\n                appendTo('#wallet-transfer-transfers-out-chart');\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the chart data into an appropriate forma that can be displayed inby the chart\r\n             * @param chartDataArray {Array} array containing chart data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the chart\r\n             */\r\n            function chartDataMapping(chartDataArray){\r\n                return chartDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = (kendo.parseFloat(dataObject.AMOUNT)) / 1000; // divide amount by 1000\r\n                    dataObject.DDATE = kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY wallet transfer cannot be performed without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                phone_sender: utopiasoftware.ally.model.appUserDetails.phone,\r\n                phone_receiver: $('#wallet-transfer-page #wallet-transfer-receiver-phone-number').val(),\r\n                amount: kendo.parseFloat($('#wallet-transfer-page #wallet-transfer-amount').val())\r\n            };\r\n\r\n            // check if the phone_receiver parameter is properly formatted for sending\r\n            if(formData.phone_receiver.startsWith(\"0\")){ // the phone number starts with 0, replace it with international dialing code\r\n                formData.phone_receiver = formData.phone_receiver.replace(\"0\", \"+234\");\r\n            }\r\n\r\n            // display the loader message to indicate that account is being created;\r\n            $('#hour-glass-loader-modal .modal-message').html(\"Completing Wallet Transfer...\");\r\n            // forward the form data & show loader\r\n            Promise.all([formData, Promise.resolve($('#hour-glass-loader-modal').get(0).show())]).\r\n            then(function(dataArray){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/transfer-wallet-to-wallet.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: dataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the response object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status != \"success\"){ // an error occured\r\n                    throw serverResponse.message || serverResponse.data.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the server response\r\n            }).\r\n            then(function(serverResponse){\r\n                // hide the loader\r\n                return Promise.all([serverResponse, $('#hour-glass-loader-modal').get(0).hide()]);\r\n            }).\r\n            then(function(responseArray){\r\n                // ask user for transaction otp\r\n                return Promise.all([responseArray[0], ons.notification.prompt({title: \"ALLY Secure PIN Confirmation\",\r\n                    id: 'pin-security-check2',\r\n                    messageHTML: `<div><ons-icon icon=\"ion-lock-combination\" size=\"24px\"\r\n                    style=\"color: #30a401; float: left; width: 26px;\"></ons-icon>\r\n                    <span style=\"float: right; width: calc(100% - 26px);\">\r\n                    ${responseArray[0].fullname.length > 1 ?\r\n                        'RECIPIENT: ' +  responseArray[0].fullname + '<br>' :  ''}\r\n                    TRANSFER FEE: ${kendo.toString(kendo.parseFloat(responseArray[0].appfee), 'n2')}<br>\r\n                    AMOUNT TO CHARGE: ${kendo.toString(kendo.parseFloat(responseArray[0].total), 'n2')}<br>\r\n                    Confirm wallet transfer by providing your ALLY Secure PIN</span></div>`,\r\n                    cancelable: false, placeholder: \"Secure PIN\", inputType: \"number\", defaultValue: \"\", autofocus: false,\r\n                    submitOnEnter: true\r\n                })]);\r\n            }).\r\n            then(function(responseArray){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#hour-glass-loader-modal .modal-message').html(\"Authorizing Wallet Transfer...\");\r\n                return Promise.all([...responseArray, $('#hour-glass-loader-modal').get(0).show()])\r\n            }).\r\n            then(function(responseArray){\r\n                // create the data to be sent for confirm of wallet transfer\r\n                var confirmationData = responseArray[0];\r\n                confirmationData.lock = responseArray[1];\r\n\r\n                // submit the data\r\n                return Promise.all([Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/transfer-wallet-to-wallet-confirm.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: confirmationData // data to submit to server\r\n                    }\r\n                )), responseArray[0]]);\r\n            }).\r\n            then(function(serverResponse){ // NOTE: serverResponse is an array\r\n                serverResponse[0] = JSON.parse((serverResponse[0] +\"\").trim()); // get the new user object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse[0].status == \"error\"){ // an error occured\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the serverResponse i.e the user details object\r\n            }).\r\n            then(function(responseDetailsArray){ // the parameter contains 2 items. item 1 - userDetails; item 2- details of the wallet transfer\r\n                // forward details of the wallet-transfer; also save the user details to encrypted storage;\r\n               return Promise.all([responseDetailsArray[1], utopiasoftware.ally.saveUserAppDetails(responseDetailsArray[0])]);\r\n            }).\r\n            then(function(dataArray){\r\n                // update local copy of user app details\r\n                utopiasoftware.ally.model.appUserDetails = dataArray[1];\r\n                // update the transfers-out chart\r\n                //utopiasoftware.ally.controller.walletTransferPageViewModel.updateTransfersOutChart('today');\r\n                // reset the page scroll position to the top\r\n                $('#wallet-transfer-page .page__content').scrollTop(0);\r\n                // forward details of the wallet-transfer and the user details\r\n                return Promise.all([...dataArray, $('#hour-glass-loader-modal').get(0).hide()]);\r\n            }).\r\n            then(function(dataArray){\r\n                // check if the recipient of the wallet transfer is a registered user\r\n                if(dataArray[0].isregistereduser != \"yes\") {\r\n                    // append the json details for the wallet-transfer to the wallet-transfer-sms-confirm-modal confirmation button\r\n                    $($('#wallet-transfer-sms-confirm-modal #wallet-transfer-sms-confirm-button').get(0)).\r\n                    attr(\"data-wallet-transfer\", JSON.stringify(dataArray[0]));\r\n                    // show the wallet-transfer-sms-confirm-modal to the user\r\n                    return $('#wallet-transfer-sms-confirm-modal').get(0).show();\r\n                }\r\n                else{ // recipient is registered\r\n                    return \"registered recipient\";\r\n                }\r\n            }).\r\n            then(function(result){\r\n                if(result === \"registered recipient\"){ // the recipient of the wallet transfer is already registered\r\n\r\n                    hockeyapp.trackEvent(function(){}, function(){}, \"FUND TRANSFERRED\"); // track fund transfer\r\n\r\n                    // reset the form for the wallet transfer page\r\n                    $('#wallet-transfer-page #wallet-transfer-form').get(0).reset();\r\n                    // reset the form validator object on the page\r\n                    utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.reset();\r\n\r\n                    // send push notification to the recipient of the transfer\r\n                    let pushNotification = { // create the push notification object\r\n                        \"app_id\": \"d5d2bdba-eec0-46b1-836e-c5b8e318e928\",\r\n                        \"filters\": [{\"field\": \"tag\", \"key\": \"phone\", \"relation\": \"=\", \"value\":\r\n                        formData.phone_receiver}],\r\n                        \"contents\": {\"en\": \"You received funds into your ALLY WALLET from \" +\r\n                        utopiasoftware.ally.model.appUserDetails.firstname + \" \" + utopiasoftware.ally.model.appUserDetails.lastname},\r\n                        \"headings\": {\"en\": \"Funds Received\"},\r\n                        \"android_channel_id\": \"66dfeddf-12d7-4194-b3d9-38325042d258\",\r\n                        \"android_visibility\": 0,\r\n                        \"priority\": 5\r\n                    };\r\n\r\n                    Promise.resolve($.ajax(\r\n                        {\r\n                            url: \"https://onesignal.com/api/v1/notifications\",\r\n                            type: \"post\",\r\n                            contentType: \"application/json\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"Authorization\", \"Basic MmQ3ODcwZGUtYmIyYS00NzY5LWIwZWQtMTk5ZGRjNzU2M2Q3\");\r\n                            },\r\n                            dataType: \"json\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: false,\r\n                            data: JSON.stringify(pushNotification)\r\n                        }\r\n                    ));\r\n\r\n                    return Promise.all([ons.notification.toast(\"Wallet Transfer Successful!\", {timeout:4000})]); // conclude wallet transfer process\r\n                }\r\n\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Your ALLY wallet transfer could not be completed. Please retry\"\r\n                }\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Wallet Transfer Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // check if the menu tabbar exists\r\n            if($('#menu-tabbar').get(0)){ // the menu tabbar object exists\r\n                // move to the previous tab\r\n                $('#menu-tabbar').get(0).setActiveTab(2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the 'Pick Contact\" button is clicked\r\n         */\r\n        pickContactButtonClicked: function(){\r\n\r\n            // display the list of contacts from the user's phone address book\r\n            new Promise(function(resolve, reject){\r\n                window.plugins.contactNumberPicker.pick(resolve, reject);\r\n            }).\r\n            then(function(contact){ // retrieve picked contact\r\n\r\n                // get the selected contact phone number\r\n                var contactPhoneNumber = contact.phoneNumber;\r\n\r\n                //format the retrieved phone number to acceptable app standards\r\n                contactPhoneNumber = contactPhoneNumber.replace(/\\D/ig, \"\"); // remove any non-digit character between phone numbers\r\n                // if any number brings with '0' replace it with '+234'\r\n                if(contactPhoneNumber.startsWith(\"0\")){ // the phone number starts with 0, replace it with international dialing code\r\n                    contactPhoneNumber = contactPhoneNumber.replace(\"0\", \"+234\");\r\n                }\r\n                //ensure phone number begins with a '+'\r\n                if(!contactPhoneNumber.startsWith(\"+\")){ // the phone number does not start with '+'\r\n                    contactPhoneNumber = \"+\" + contactPhoneNumber; // append the '+' to the beginning\r\n                }\r\n\r\n                // update the recipient phone input field with the retrieved & formatted phone number\r\n                $('#wallet-transfer-form #wallet-transfer-receiver-phone-number').val(contactPhoneNumber);\r\n            }).\r\n            catch(function(){\r\n\r\n                // inform the user that there was an error\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"phone contacts could not be accessed right now\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n            });\r\n        },\r\n\r\n\r\n        walletTransferSmsConfirmButtonClicked: function(buttonElem){\r\n\r\n            hockeyapp.trackEvent(function(){}, function(){}, \"FUND TRANSFERRED\"); // track fund transfer\r\n\r\n            // get the details of the wall transfer for which an sms confirmation is being sent\r\n            var walletTransferDetails = JSON.parse($(buttonElem).attr('data-wallet-transfer'));\r\n\r\n            // use a promise to send the sms confirmation message to the recipient\r\n            new Promise(function(resolve, reject){\r\n                // send sms\r\n                SMS.sendSMS(walletTransferDetails.receiver, \"Hello, I just sent \" +\r\n                    walletTransferDetails.amount + \" to your ALLY wallet. Download ALLY using this link \" +\r\n                    \"and your phone number to receive your funds\\r\\n\" +\r\n                    utopiasoftware.ally.model.ally_app_share_link, resolve, reject);\r\n            });\r\n\r\n            // hide the sms confirmation modal\r\n            $('#wallet-transfer-sms-confirm-modal').get(0).hide();\r\n\r\n            // reset the form for the wallet transfer page\r\n            $('#wallet-transfer-page #wallet-transfer-form').get(0).reset();\r\n            // reset the form validator object on the page\r\n            utopiasoftware.ally.controller.walletTransferPageViewModel.formValidator.reset();\r\n\r\n            return Promise.all([ons.notification.toast(\"Wallet Transfer Successful!\", {timeout:4000})]); // conclude wallet transfer process\r\n\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * object is view-model for disburse-wallet page\r\n     */\r\n    disburseWalletPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        amountFieldValidator: null,\r\n\r\n        /**\r\n         * used to hold the Account Number ComboBox component\r\n         */\r\n        accountNumberComboBox: null,\r\n\r\n        /**\r\n         * used to hold the Banks DropDownList component\r\n         */\r\n        banksDropDownList: null,\r\n\r\n        /**\r\n         ** used to hold the ej Tooltip component\r\n         */\r\n        formTooltip: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.backButtonClicked;\r\n\r\n                // display the page preloader\r\n                $('.page-preloader', $thisPage).css('display', \"block\");\r\n\r\n                // hide the form\r\n                $('#disburse-wallet-form', $thisPage).css('display', \"none\");\r\n\r\n                // initialise the bank DropDown widget\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList =  new ej.dropdowns.DropDownList({\r\n                    //set the data to dataSource property\r\n                    dataSource: [],\r\n                    fields: {text: 'name', value: 'code'},\r\n                    sortOrder: \"Ascending\",\r\n                    enabled: true,\r\n                    placeholder: \"Select Bank\",\r\n                    floatLabelType: \"Auto\",\r\n                    popupHeight: \"300px\"\r\n                });\r\n\r\n                // render initialised bank dropdown list\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.\r\n                banksDropDownList.appendTo('#disburse-wallet-bank');\r\n\r\n                // initialise the account number combo box widget\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.accountNumberComboBox =\r\n                 new ej.dropdowns.ComboBox({\r\n                 //set the data to dataSource property\r\n                 dataSource: [],\r\n                 fields: {text: 'displayText', value: 'ACCOUNTNUMBER'},\r\n                 placeholder: \"Account Name or Number (NUBAN)\",\r\n                 floatLabelType: \"Auto\",\r\n                 popupHeight: \"300px\",\r\n                 allowCustom: true\r\n                 });\r\n\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.\r\n                accountNumberComboBox.appendTo('#disburse-wallet-account-number');\r\n\r\n                // initialise form tooltips\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formTooltip = new ej.popups.Tooltip({\r\n                    target: '.ally-input-tooltip',\r\n                    position: 'top center',\r\n                    cssClass: 'ally-input-tooltip',\r\n                    opensOn: 'focus'\r\n                });\r\n\r\n                // render the initialized form tooltip\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formTooltip.appendTo('#disburse-wallet-form');\r\n\r\n\r\n                // initialise the amount field\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.amountFieldValidator =\r\n                    $('#disburse-wallet-amount').parsley({\r\n                        value: function(parsley) {\r\n                            // convert the amount back to a plain text without the thousand separator\r\n                            let parsedNumber = kendo.parseFloat($('#disburse-wallet-amount', $thisPage).val());\r\n                            return (parsedNumber ? parsedNumber : $('#disburse-wallet-amount', $thisPage).val());\r\n                        }\r\n                    });\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator = $('#disburse-wallet-form').parsley();\r\n\r\n                // attach listener for the disburse wallet button on the page\r\n                $('#disburse-wallet-disburse-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for the form field validation failure event\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                    $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                    $(fieldInstance.$element).removeAttr(\"title\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidated);\r\n\r\n\r\n                // create the form data to be sent\r\n                var formData = {phone: utopiasoftware.ally.model.appUserDetails.phone};\r\n\r\n                // get the collection of stored bank accounts and bank names\r\n                Promise.resolve(formData).\r\n                then(function(){\r\n                    // submit the form data\r\n                    return Promise.resolve($.ajax(\r\n                        {\r\n                            url: utopiasoftware.ally.model.ally_base_url + \"/mobile/get-my-bank-accounts.php\",\r\n                            type: \"post\",\r\n                            contentType: \"application/x-www-form-urlencoded\",\r\n                            beforeSend: function(jqxhr) {\r\n                                jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                            },\r\n                            dataType: \"text\",\r\n                            timeout: 240000, // wait for 4 minutes before timeout of request\r\n                            processData: true,\r\n                            data: formData // data to submit to server\r\n                        }\r\n                    ));\r\n                }).\r\n                then(function(serverResponse){\r\n                    serverResponse +=  \"\";\r\n                    serverResponse = JSON.parse(serverResponse.trim()); // get the response object (i.e. array of bank account objects)\r\n                    serverResponse.forEach(function(acctObject){  // add an additional property to each object\r\n                        // this property is displayed to the user\r\n                        acctObject.displayText = acctObject.RECIPIENTNAME + \" - \" + acctObject.ACCOUNTNUMBER;\r\n                    });\r\n\r\n                    return Promise.all([serverResponse,\r\n                    utopiasoftware.ally.banksData()]); // forward the server response i.e. collection of bank accounts (and the list of banks)\r\n                }).\r\n                then(function(promiseArray){ // this array contains the list of user bank accounts AND the list of banks in nigeria\r\n\r\n                    //populate data fir the bank dropdown list\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.dataSource =\r\n                        promiseArray[1];\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.dataBind();\r\n\r\n                    // populate data for the account combo box\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.accountNumberComboBox.dataSource =\r\n                        promiseArray[0];\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.accountNumberComboBox.dataBind();\r\n\r\n                    // add the change event listener to listen for changes in the bank account number combo box\r\n                    utopiasoftware.ally.controller.disburseWalletPageViewModel.\r\n                    accountNumberComboBox.addEventListener(\"change\", function(){\r\n                        var accountObj = this.getDataByValue(this.value); // get the object that matches the selected value\r\n                        if(accountObj){\r\n                            // update the bank selection dropdown\r\n                            utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.value =\r\n                                accountObj[\"BANKCODE\"];\r\n                            utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.enabled = false;\r\n                            // update the account nickname input\r\n                            $('#disburse-wallet-page #disburse-wallet-account-name').val(accountObj.RECIPIENTNAME);\r\n                            $('#disburse-wallet-page #disburse-wallet-account-name').attr(\"readonly\", true);\r\n                        }\r\n                        else{\r\n                            // update the bank selection dropdown\r\n                            utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.enabled = true;\r\n                            utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.value = null;\r\n                            utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.text = null;\r\n                            // update the account nickname input\r\n                            $('#disburse-wallet-page #disburse-wallet-account-name').val(\"\");\r\n                            $('#disburse-wallet-page #disburse-wallet-account-name').removeAttr(\"readonly\");\r\n                        }\r\n                        // update the bank selection dropdown\r\n                        utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.dataBind();\r\n                    });\r\n\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css('display', \"none\");\r\n\r\n                    // display the form\r\n                    $('#disburse-wallet-form', $thisPage).css('display', \"block\");\r\n\r\n                    // hide the loader\r\n                    $('#loader-modal').get(0).hide();\r\n\r\n                }).\r\n                catch(function(err){\r\n                    console.log(err);\r\n                    // hide the page preloader\r\n                    $('.page-preloader', $thisPage).css('display', \"none\");\r\n\r\n                    // display the form\r\n                    $('#disburse-wallet-form', $thisPage).css('display', \"block\");\r\n\r\n                    // inform the user that they cannot proceed without Internet\r\n                    window.plugins.toast.showWithOptions({\r\n                        message: \"some content could be loaded without an Internet Connection\",\r\n                        duration: 4000,\r\n                        position: \"top\",\r\n                        styling: {\r\n                            opacity: 1,\r\n                            backgroundColor: '#ff0000', //red\r\n                            textColor: '#FFFFFF',\r\n                            textSize: 14\r\n                        }\r\n                    }, function(toastEvent){\r\n                        if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                            window.plugins.toast.hide();\r\n                        }\r\n                    });\r\n                });\r\n\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#disburse-wallet-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#disburse-wallet-page [title]').removeAttr(\"title\");\r\n                $('#disburse-wallet-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#disburse-wallet-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#disburse-wallet-page [data-hint]').removeAttr(\"title\");\r\n                $('#disburse-wallet-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formValidator.destroy();\r\n                // destroy other form components\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.accountNumberComboBox.destroy();\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.destroy();\r\n                utopiasoftware.ally.controller.disburseWalletPageViewModel.formTooltip.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY wallet disbursal cannot be performed without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                amount: kendo.parseFloat($('#disburse-wallet-page #disburse-wallet-amount').val()),\r\n                phone: utopiasoftware.ally.model.appUserDetails.phone,\r\n                accountno: utopiasoftware.ally.controller.disburseWalletPageViewModel.\r\n                accountNumberComboBox.text.substring(utopiasoftware.ally.controller.disburseWalletPageViewModel.\r\n                    accountNumberComboBox.text.length - 10, utopiasoftware.ally.controller.disburseWalletPageViewModel.\r\n                    accountNumberComboBox.text.length),\r\n                bankcode: utopiasoftware.ally.controller.disburseWalletPageViewModel.banksDropDownList.value\r\n            };\r\n\r\n            // display the loader message to indicate that account is being created;\r\n            $('#hour-glass-loader-modal .modal-message').html(\"Completing Wallet Disbursal...\");\r\n            // forward the form data & show loader\r\n            Promise.all([formData, Promise.resolve($('#hour-glass-loader-modal').get(0).show())]).\r\n            then(function(dataArray){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/transfer-wallet-to-account.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: dataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the response object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status != \"success\"){ // an error occured\r\n                    throw serverResponse.message || serverResponse.data.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the server response\r\n            }).\r\n            then(function(serverResponse){\r\n                // hide the loader\r\n                return Promise.all([serverResponse, $('#hour-glass-loader-modal').get(0).hide()]);\r\n            }).\r\n            then(function(responseArray){\r\n                // ask user for transaction otp\r\n                return Promise.all([responseArray[0], ons.notification.prompt({title: \"ALLY Secure PIN Confirmation\",\r\n                    id: 'pin-security-check2',\r\n                    messageHTML: `<div><ons-icon icon=\"ion-lock-combination\" size=\"24px\"\r\n                    style=\"color: #30a401; float: left; width: 26px;\"></ons-icon>\r\n                    <span style=\"float: right; width: calc(100% - 26px);\">\r\n                    ${responseArray[0].accountno.length > 1 ?\r\n                    'ACCOUNT: ' +  responseArray[0].accountno + '<br>' :  ''}\r\n                    TRANSFER FEE: ${kendo.toString(kendo.parseFloat(responseArray[0].appfee), 'n2')}<br>\r\n                    AMOUNT TO CHARGE: ${kendo.toString(kendo.parseFloat(responseArray[0].total), 'n2')}<br>\r\n                    Confirm wallet disbursal by providing your ALLY Secure PIN</span></div>`,\r\n                    cancelable: false, placeholder: \"Secure PIN\", inputType: \"number\", defaultValue: \"\", autofocus: false,\r\n                    submitOnEnter: true\r\n                })]);\r\n            }).\r\n            then(function(responseArray){\r\n                // display the loader message to indicate that account is being created;\r\n                $('#hour-glass-loader-modal .modal-message').html(\"Authorizing Wallet Disbursal...\");\r\n                return Promise.all([...responseArray, $('#hour-glass-loader-modal').get(0).show()])\r\n            }).\r\n            then(function(responseArray){\r\n                // create the data to be sent for confirm of wallet transfer\r\n                var confirmationData = responseArray[0];\r\n                confirmationData.lock = responseArray[1];\r\n                confirmationData.saveaccount = $('#disburse-wallet-page #disburse-wallet-save-account-details').get(0).checked;\r\n                confirmationData.recipientnickname = $('#disburse-wallet-page #disburse-wallet-account-name').val();\r\n\r\n                // submit the data\r\n                return Promise.all([Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/transfer-wallet-to-account-confirm.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: confirmationData // data to submit to server\r\n                    }\r\n                )), responseArray[0]]);\r\n            }).\r\n            then(function(serverResponse){ // NOTE: serverResponse is an array\r\n                serverResponse[0] = JSON.parse((serverResponse[0] +\"\").trim()); // get the new user object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse[0].status == \"error\"){ // an error occured\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the serverResponse i.e the user details object\r\n            }).\r\n            then(function(responseDetailsArray){ // the parameter contains 2 items. item 1 - userDetails; item 2- details of the wallet disbursal\r\n                // forward details of the wallet-disbursal; also save the user details to encrypted storage;\r\n                return Promise.all([responseDetailsArray[1], utopiasoftware.ally.saveUserAppDetails(responseDetailsArray[0])]);\r\n            }).\r\n            then(function(dataArray){\r\n                // update local copy of user app details\r\n                utopiasoftware.ally.model.appUserDetails = dataArray[1];\r\n                // forward details of the wallet-transfer and the user details\r\n                return Promise.all([$('#hour-glass-loader-modal').get(0).hide()]);\r\n            }).\r\n            then(function(){\r\n\r\n                hockeyapp.trackEvent(function(){}, function(){}, \"WALLET DISBURSED\"); // track wallet disbursement\r\n                return Promise.all([ons.notification.toast(\"Wallet Disbursal Successful!\", {timeout:4000}),\r\n                $('#app-main-navigator').get(0).popPage({data: {refresh: true}})]); // conclude wallet disbursal process\r\n\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry. Your ALLY wallet disbursal could not be completed. Please retry\"\r\n                }\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> Wallet Disbursal Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // remove this page form the main navigator stack\r\n            $('#app-main-navigator').get(0).popPage();\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for payments page\r\n     */\r\n    paymentsPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $thisPage.get(0).onDeviceBackButton = utopiasoftware.ally.controller.paymentsPageViewModel.backButtonClicked;\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // get the payments tab hidden object\r\n            var paymentsButtonSegment = $('#payments-page #payments-tabbar').get(0);\r\n\r\n            // check which button in the button segment is active\r\n            if(paymentsButtonSegment.getActiveTabIndex() == 0){ // the 1st hidden tab is active\r\n\r\n                // check if there is an active payment is ongoing\r\n                if(utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.activePayment === true){ // there is an active payment\r\n                    // caution tohe user about leaving the page when an active payment is ongoing\r\n                    ons.notification.confirm({title: '<ons-icon icon=\"md-alert-triangle\" size=\"36px\" ' +\r\n                    'style=\"color: orange;\"></ons-icon> Cancel Payment',\r\n                        messageHTML: '<span>Merchant payment is in progress. <br>' +\r\n                        'If you leave, all information on payment will be lost.<br>' +\r\n                        'Do you want to leave?</span>',\r\n                        cancelable: false,\r\n                        buttonLabels: [\"No\", \"Yes\"]\r\n                    }).\r\n                    then(function(buttonIndex){ // check which button was selected\r\n                        if(buttonIndex === 0){ // user chose not to leave the page\r\n                            return; // exit\r\n                        }\r\n\r\n                        // user chose to leave, so call the hide method for the currently active page\r\n                        utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.pageHide();\r\n                        // move to the previous tab in the menu-tabbar\r\n                        $('#menu-tabbar').get(0).setActiveTab(0);\r\n\r\n                    }).catch();\r\n                }\r\n                else{ // there is no active payment\r\n\r\n                    // call the hide method for the currently active page\r\n                    utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.pageHide();\r\n\r\n                    // move to the previous tab in the menu-tabbar\r\n                    $('#menu-tabbar').get(0).setActiveTab(0);\r\n                }\r\n\r\n                return; // exit\r\n            }\r\n\r\n            if(paymentsButtonSegment.getActiveTabIndex() == 1){ // the 2nd hidden tab is active\r\n\r\n                // check if there is an active payment is ongoing\r\n                if(utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment === true){ // there is an active payment\r\n                    // caution tohe user about leaving the page when an active payment is ongoing\r\n                    ons.notification.confirm({title: '<ons-icon icon=\"md-alert-triangle\" size=\"36px\" ' +\r\n                    'style=\"color: orange;\"></ons-icon> Cancel Payment',\r\n                        messageHTML: '<span>Merchant payment is in progress. <br>' +\r\n                        'If you leave, all information on payment will be lost.<br>' +\r\n                        'Do you want to leave?</span>',\r\n                        cancelable: false,\r\n                        buttonLabels: [\"No\", \"Yes\"]\r\n                    }).\r\n                    then(function(buttonIndex){ // check which button was selected\r\n                        if(buttonIndex === 0){ // user chose not to leave the page\r\n                            return; // exit\r\n                        }\r\n\r\n                        // user chose to leave, so call the hide method for the currently active page\r\n                        utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.pageHide();\r\n                        paymentsButtonSegment.setActiveTab(0); // move to the 1st hidden tab\r\n\r\n                    }).catch();\r\n                }\r\n                else{ // there is no active payment\r\n\r\n                    // call the hide method for the currently active page\r\n                    utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.pageHide();\r\n\r\n                    paymentsButtonSegment.setActiveTab(0); // move to the 1st button's page\r\n                }\r\n\r\n                return; // exit\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * object is view-model for payments-ally-scan page\r\n     */\r\n    paymentsAllyScanPageViewModel: {\r\n\r\n        /**\r\n         * property is used to hold the \"Payments Out\" Chart\r\n         */\r\n        paymentsOutChart: null,\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        //amountFieldValidator: null,\r\n\r\n        /**\r\n         * property is used to track whether there is an active ongoing payment.\r\n         * A value of true means there is an active payment; any other value means there is none\r\n         */\r\n        activePayment: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // initialise the 'active payment' status to false i.e. no active payment\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.activePayment = false;\r\n\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator = $('#payments-ally-scan-form').parsley();\r\n\r\n                // attach listener for the FIND button on the page\r\n                $('#payments-ally-scan-find-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // attach listener for the payments-ally-scan-modal back buttons\r\n                $('#payments-ally-scan-modal').get(0).onDeviceBackButton =\r\n                    $('#payments-ally-scan-modal-back-button').get(0).onclick =\r\n                        function(){\r\n\r\n                            // hide the payments-ally-scan-modal\r\n                            $('#payments-ally-scan-modal').get(0).hide();\r\n\r\n                            // call the hide method for the currently active page\r\n                            utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.pageHide();\r\n                        };\r\n\r\n                // populate the payments-out chart\r\n                //utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.updatePaymentOutChart('today');\r\n\r\n                // listen for the form field validation failure event\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                    $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                    $(fieldInstance.$element).removeAttr(\"title\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.findButtonClicked);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n\r\n\r\n                // flag that no active payment is taking place\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.activePayment = false;\r\n\r\n                // remove the transparency from the webpage\r\n                $('html, body').removeClass('ally-transparent');\r\n                $('#payments-page').removeClass('transparent');\r\n                $('#payments-ally-scan-page').removeClass('transparent');\r\n\r\n\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#payments-ally-scan-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#payments-ally-scan-page [title]').removeAttr(\"title\");\r\n                $('#payments-ally-scan-page [data-hint]').removeAttr(\"data-hint\");\r\n\r\n                // reset the form\r\n                $('#payments-ally-scan-page #payments-ally-scan-form').get(0).reset();\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.reset();\r\n                $('#payments-ally-scan-page #payments-ally-scan-find-button').css(\"transform\", \"scale(1)\");\r\n\r\n                // reset the page scroll position to the top\r\n                $('#payments-ally-scan-page .page__content').scrollTop(0);\r\n\r\n                // disable the webview transparency\r\n                QRScanner.hide(function(status){\r\n                    QRScanner.resumePreview(function(){});\r\n                });\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n\r\n            try{\r\n\r\n                // flag that no active payment is taking place\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.activePayment = false;\r\n\r\n                // remove the transparency from the webpage\r\n                $('html, body').removeClass('ally-transparent');\r\n                $('#payments-page').removeClass('transparent');\r\n                $('#payments-ally-scan-page').removeClass('transparent');\r\n\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#payments-ally-scan-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#payments-ally-scan-page [title]').removeAttr(\"title\");\r\n                $('#payments-ally-scan-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.destroy();\r\n\r\n\r\n                // destroy the current state of the QR Scanner &disable the webview transparency\r\n                QRScanner.destroy(function(status){\r\n\r\n                });\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * update the wallet payment-out chart. Either using cached data or remote data\r\n         *\r\n         * @param periodType\r\n         */\r\n        updatePaymentOutChart: function(periodType){\r\n\r\n            // variable holds the object that contains the customisable settings for the chart created based on the 'periodType' parameter\r\n            var chartCustomisableSettings = null;\r\n\r\n            switch(periodType){ // check the periodType parameter and format chartCutomisableSetting accordingly\r\n\r\n                case \"today\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments Out (Today)\",\r\n                        labelFormat: 'ha',\r\n                        intervalType: 'Hours'};\r\n                    break;\r\n\r\n                case \"weekly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments Out (Last 7 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n\r\n                case \"monthly\":\r\n                    chartCustomisableSettings = {chartTitle: \"ALLY Wallet Payments Out (Last 30 Days)\",\r\n                        labelFormat: 'dMMM',\r\n                        intervalType: 'Days'};\r\n                    break;\r\n            }\r\n\r\n            // check if the payments out Chart has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.paymentsOutChart){ // chart has previously been created\r\n                // destroy the chart object\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.paymentsOutChart.destroy();\r\n            }\r\n\r\n            // display chart loading indicator\r\n            $('#payments-ally-scan-page #payments-ally-scan-payments-out-chart').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Wallet Payments Out\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.dashboardCharts.loadPaymentOutData().\r\n                then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                    // format the chart data array so it can be properly used\r\n                    return chartDataMapping(chartDataArray[periodType]);\r\n                }).\r\n                then(function(chartDataArray){\r\n                    utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.paymentsOutChart =\r\n                        new ej.charts.Chart({\r\n                            // Width and height for chart in pixel\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                            palettes: [\"#30A401\"],\r\n                            title: chartCustomisableSettings.chartTitle,\r\n                            titleStyle: {\r\n                                size: '1em'\r\n                            },\r\n                            tooltip: { enable: true,\r\n                                format: 'Amount: ${point.y}'\r\n                            },\r\n                            // Legend for chart\r\n                            legendSettings: {\r\n                                visible: true\r\n                            },\r\n                            primaryXAxis: {\r\n                                title: 'Time (GMT +1)',\r\n                                valueType: 'DateTime',\r\n                                labelFormat: chartCustomisableSettings.labelFormat,\r\n                                intervalType: chartCustomisableSettings.intervalType,\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            primaryYAxis: {\r\n                                title: 'Amount in thousands (N)',\r\n                                valueType: 'Double',\r\n                                labelFormat: '{value}k',\r\n                                titleStyle: {\r\n                                    size: '1em',\r\n                                    textAlignment: 'center'\r\n                                }\r\n                            },\r\n                            series: [{\r\n                                dataSource: chartDataArray,\r\n                                width: 2,\r\n                                marker: {visible: true, width: 8, height:8},\r\n                                xName: 'DDATE', yName: 'AMOUNT',\r\n                                name: 'Outgoing Payments',\r\n                                //Series type as line\r\n                                type: 'Area'\r\n                            }]\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#payments-ally-scan-page #payments-ally-scan-payments-out-chart').html(\"\");\r\n                    //append the newly created chart\r\n                    utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.paymentsOutChart.\r\n                    appendTo('#payments-ally-scan-payments-out-chart');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet payments-out data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/chart-payment-out.php\",\r\n                    //url: \"in-wallet-chart-dummy.json\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone, duration: periodType} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.dashboardCharts.loadPaymentOutData()]);\r\n            }).\r\n            then(function(chartDataArray){ // save the chart array data to cache\r\n                chartDataArray[1] = chartDataArray[1];\r\n                chartDataArray[1][periodType] = chartDataArray[0];\r\n                return utopiasoftware.ally.dashboardCharts.savePaymentOutData(chartDataArray[1]);\r\n            }).\r\n            then(function(chartDataArray){ // get the chart data array to be used by chart\r\n                // format the chart data array so it can be properly used\r\n                return chartDataMapping(chartDataArray[periodType]);\r\n            }).\r\n            then(function(chartDataArray){\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.paymentsOutChart =\r\n                    new ej.charts.Chart({\r\n                        // Width and height for chart in pixel\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        margin: { left: 0, right: 15, top: 0, bottom: 0 },\r\n                        palettes: [\"#30A401\"],\r\n                        title: chartCustomisableSettings.chartTitle,\r\n                        titleStyle: {\r\n                            size: '1em'\r\n                        },\r\n                        tooltip: { enable: true,\r\n                            format: 'Amount: ${point.y}'\r\n                        },\r\n                        // Legend for chart\r\n                        legendSettings: {\r\n                            visible: true\r\n                        },\r\n                        primaryXAxis: {\r\n                            title: 'Time (GMT +1)',\r\n                            valueType: 'DateTime',\r\n                            labelFormat: chartCustomisableSettings.labelFormat,\r\n                            intervalType: chartCustomisableSettings.intervalType,\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        primaryYAxis: {\r\n                            title: 'Amount in thousands (N)',\r\n                            valueType: 'Double',\r\n                            labelFormat: '{value}k',\r\n                            titleStyle: {\r\n                                size: '1em',\r\n                                textAlignment: 'center'\r\n                            }\r\n                        },\r\n                        series: [{\r\n                            dataSource: chartDataArray,\r\n                            width: 2,\r\n                            marker: {visible: true, width: 8, height:8},\r\n                            xName: 'DDATE', yName: 'AMOUNT',\r\n                            name: 'Outgoing Payments',\r\n                            //Series type as line\r\n                            type: 'Area'\r\n                        }]\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#payments-ally-scan-page #payments-ally-scan-payments-out-chart').html(\"\");\r\n                //append the newly created chart\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.paymentsOutChart.\r\n                appendTo('#payments-ally-scan-payments-out-chart');\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the chart data into an appropriate form that can be displayed by the chart\r\n             * @param chartDataArray {Array} array containing chart data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the chart\r\n             */\r\n            function chartDataMapping(chartDataArray){\r\n                return chartDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = (kendo.parseFloat(dataObject.AMOUNT)) / 1000; // divide amount by 1000\r\n                    dataObject.DDATE = kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the SCAN button is clicked\r\n         */\r\n        scanButtonClicked: function(){\r\n\r\n            // remove any tooltip being displayed on all forms on the page\r\n            $('#payments-ally-scan-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n            $('#payments-ally-scan-page [title]').removeAttr(\"title\");\r\n            $('#payments-ally-scan-page [data-hint]').removeAttr(\"data-hint\");\r\n            // reset the form validator object on the page\r\n            utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.reset();\r\n            // reset the form\r\n            $('#payments-ally-scan-page #payments-ally-scan-form').get(0).reset();\r\n\r\n            // make page transparent in preparation for QR code scanning\r\n            $('html, body').addClass('ally-transparent');\r\n            $('#payments-page').addClass('transparent');\r\n            $('#payments-ally-scan-page').addClass('transparent');\r\n\r\n            // start video display\r\n            QRScanner.resumePreview(function(status){\r\n\r\n                // show the payment-ally-scan-modal\r\n                $('#payments-ally-scan-modal').get(0).show();\r\n\r\n                QRScanner.show(function(status){ // make webview transparent\r\n                    QRScanner.scan(function(err,qrCode){ // begin scanning QR code\r\n\r\n                        if(err){ // an error occurred, so inform the user\r\n\r\n                            // remove page transparency\r\n                            $('html, body').removeClass('ally-transparent');\r\n                            $('#payments-page').removeClass('transparent');\r\n                            $('#payments-ally-scan-page').removeClass('transparent');\r\n\r\n                            // hide the payment-ally-scan-modal\r\n                            $('#payments-ally-scan-modal').get(0).hide();\r\n\r\n                            // inform the user of the error\r\n                            ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                            'style=\"color: red;\"></ons-icon> ALLY Payment Error',\r\n                                messageHTML: '<span>' + 'Sorry, Merchant QR Code could not be scanned.<br> ' +\r\n                                'You can try again OR type in Merchant Code directly' + '</span>',\r\n                                cancelable: false\r\n                            });\r\n\r\n                            // flag that no active payment is taking place\r\n                            utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.activePayment = false;\r\n\r\n                            return; // exit after handling error\r\n                        } // end of error section\r\n\r\n                        // if code gets to this section below, then there was no error\r\n\r\n                        // flag that an active payment is taking place\r\n                        utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.activePayment = true;\r\n                        // flag that an active payment is taking place\r\n                        utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment = true;\r\n\r\n                        // pause the video preview\r\n                        QRScanner.pausePreview(function(status){\r\n                            // get each content of the QR Code\r\n                            var qrCodeSegmentsArray = (qrCode + \"\").trim().split(\"|\");\r\n                            // update the contents of the payment form with the qrCodeSegmentsArray\r\n                            $('#payments-ally-direct-page #payments-ally-direct-merchant-name').val(qrCodeSegmentsArray[0]);\r\n                            $('#payments-ally-direct-page #payments-ally-direct-merchant-code').val(qrCodeSegmentsArray[1]);\r\n                            $('#payments-ally-direct-page #payments-ally-direct-merchant-phone').val(qrCodeSegmentsArray[2]);\r\n\r\n                            // wait for some time before proceeding to payment\r\n                            window.setTimeout(function(){\r\n\r\n                                // remove page transparency\r\n                                $('html, body').removeClass('ally-transparent');\r\n                                $('#payments-page').removeClass('transparent');\r\n                                $('#payments-ally-scan-page').removeClass('transparent');\r\n\r\n                                // reset the form validator object on the page\r\n                                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.formValidator.reset();\r\n                                // reset the form\r\n                                $('#payments-ally-scan-page #payments-ally-scan-form').get(0).reset();\r\n\r\n                                // hide the payment-ally-scan-modal\r\n                                $('#payments-ally-scan-modal').get(0).hide();\r\n                                // proceed to payment\r\n                                $('#payments-page #payments-tabbar').get(0).setActiveTab(1);\r\n                            }, 1000);\r\n\r\n\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the FIND button is clicked\r\n         */\r\n        findButtonClicked: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"merchant details cannot be found without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n\r\n            // display the loader message to indicate that account is being created;\r\n            $('#hour-glass-loader-modal .modal-message').html(\"Finding Merchant Details...\");\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                merchantcode: $('#payments-ally-scan-page #payments-ally-scan-merchant-code').val().trim()\r\n            };\r\n\r\n            Promise.all([formData, $('#hour-glass-loader-modal').get(0).show()]).\r\n            then(function(promiseDataArray){\r\n\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/pay-merchant-normal.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: promiseDataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse = JSON.parse((serverResponse +\"\").trim()); // get the new user object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status == \"error\"){ // an error occured\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the serverResponse i.e the user details object\r\n            }).\r\n            then(function(serverResponse){\r\n                // update the payment form with the data retrieved\r\n                $('#payments-ally-direct-page #payments-ally-direct-merchant-code').val(serverResponse.usercode);\r\n                $('#payments-ally-direct-page #payments-ally-direct-merchant-phone').val(serverResponse.phone);\r\n                $('#payments-ally-direct-page #payments-ally-direct-merchant-name').val(serverResponse.merchantname);\r\n\r\n                // flag that merchant payment is active\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment = true;\r\n                // call the page pageHide method for this currently active page\r\n                utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.pageHide();\r\n\r\n                // proceed to payment section\r\n                return $('#payments-page #payments-tabbar').get(0).setActiveTab(1);\r\n            }).\r\n            then(function(){\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = 'Sorry, merchant details could not be retrieved.<br> ' +\r\n                        'You can try again OR use ALLY Scan as an alternative';\r\n                }\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> ALLY Payment Error',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for payments-ally-direct page\r\n     */\r\n    paymentsAllyDirectPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * used to hold the parsley validator for the Amount field\r\n         */\r\n        amountFieldValidator: null,\r\n\r\n        /**\r\n         * property is used to track whether there is an active ongoing payment.\r\n         * A value of true means there is an active payment; any other value means there is none\r\n         */\r\n        activePayment: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // initialise the 'active payment' status to false i.e. no active payment\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment = false;\r\n\r\n                // initialise the amount field\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.amountFieldValidator =\r\n                    $('#payments-ally-direct-amount').parsley({\r\n                        value: function(parsley) {\r\n                            // convert the amount back to a plain text without the thousand separator\r\n                            let parsedNumber = kendo.parseFloat($('#payments-ally-direct-amount', $thisPage).val());\r\n                            return (parsedNumber ? parsedNumber : $('#payments-ally-direct-amount', $thisPage).val());\r\n                        }\r\n                    });\r\n\r\n\r\n                // initialise the form validation\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator = $('#payments-ally-direct-form').parsley();\r\n\r\n                // attach listener for the pay button on the page\r\n                $('#payments-ally-direct-pay-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for the form field validation failure event\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                    $(fieldInstance.$element).attr(\"title\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                    $(fieldInstance.$element).removeAttr(\"title\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n\r\n                // flag that no active payment is taking place\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment = false;\r\n\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#payments-ally-direct-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#payments-ally-direct-page [title]').removeAttr(\"title\");\r\n                $('#payments-ally-direct-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.reset();\r\n                // reset the form\r\n                $('#payments-ally-direct-page #payments-ally-direct-form').get(0).reset();\r\n\r\n                // reset the page scroll position to the top\r\n                $('#payments-ally-direct-page .page__content').scrollTop(0);\r\n\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n\r\n            try{\r\n\r\n                // flag that no active payment is taking place\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment = false;\r\n\r\n                // remove the transparency from the webpage\r\n                $('html, body').removeClass('ally-transparent');\r\n                $('#payments-page').removeClass('transparent');\r\n                $('#payments-ally-direct-page').removeClass('transparent');\r\n\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#payments-ally-direct-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#payments-ally-direct-page [title]').removeAttr(\"title\");\r\n                $('#payments-ally-direct-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.amountFieldValidator.destroy();\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.destroy();\r\n\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when the form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"merchant payment cannot be made without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                phone_sender: utopiasoftware.ally.model.appUserDetails.phone,\r\n                phone_receiver: $('#payments-ally-direct-page #payments-ally-direct-merchant-phone').val(),\r\n                merchantcode: $('#payments-ally-direct-page #payments-ally-direct-merchant-code').val(),\r\n                amount: kendo.parseFloat($('#payments-ally-direct-page #payments-ally-direct-amount').val()),\r\n                merchantname: $('#payments-ally-direct-page #payments-ally-direct-merchant-name').val()\r\n            };\r\n\r\n            ons.notification.prompt({title: \"ALLY Secure PIN Confirmation\",\r\n                id: 'pin-security-check2',\r\n                messageHTML: `<div><ons-icon icon=\"ion-lock-combination\" size=\"24px\"\r\n                    style=\"color: #30a401; float: left; width: 26px;\"></ons-icon>\r\n                    <span style=\"float: right; width: calc(100% - 26px);\">\r\n                    Confirm merchant payment by providing your ALLY Secure PIN</span></div>`,\r\n                cancelable: false, placeholder: \"Secure PIN\", inputType: \"number\", defaultValue: \"\", autofocus: false,\r\n                submitOnEnter: true\r\n            }).\r\n            then(function(userInput){ // get the user input\r\n\r\n                // update the form data to be submitted\r\n                formData.lock = userInput; // add the user secure pin\r\n\r\n                // display the loader message to indicate that account is being created;\r\n                $('#hour-glass-loader-modal .modal-message').html(\"Authorizing Merchant Payment...\");\r\n\r\n                return Promise.all([formData, $('#hour-glass-loader-modal').get(0).show()]); // forward the data to be submitted\r\n            }).\r\n            then(function(promiseDataArray){\r\n\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/pay-merchant-normal-confirm.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: promiseDataArray[0] // data to submit to server\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse = JSON.parse((serverResponse +\"\").trim()); // get the new user object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status == \"error\"){ // an error occured\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                return serverResponse; // forward the serverResponse i.e the user details object\r\n            }).\r\n            then(function(responseDetails){\r\n                // forward details of the save the user details to encrypted storage;\r\n                return Promise.all([utopiasoftware.ally.saveUserAppDetails(responseDetails)]);\r\n            }).\r\n            then(function(dataArray){\r\n                // update local copy of user app details\r\n                utopiasoftware.ally.model.appUserDetails = dataArray[0];\r\n\r\n                // flag that no active payment is taking place\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.activePayment = false;\r\n\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#payments-ally-direct-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#payments-ally-direct-page [title]').removeAttr(\"title\");\r\n                $('#payments-ally-direct-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.paymentsAllyDirectPageViewModel.formValidator.reset();\r\n                // reset the form\r\n                $('#payments-ally-direct-page #payments-ally-direct-form').get(0).reset();\r\n\r\n                // reset the page scroll position to the top\r\n                $('#payments-ally-direct-page .page__content').scrollTop(0);\r\n\r\n                // populate the payments-out chart\r\n                //utopiasoftware.ally.controller.paymentsAllyScanPageViewModel.updatePaymentOutChart('today');\r\n\r\n                // send push notification to the recipient of the transfer\r\n                let pushNotification = { // create the push notification object\r\n                    \"app_id\": \"d5d2bdba-eec0-46b1-836e-c5b8e318e928\",\r\n                    \"filters\": [{\"field\": \"tag\", \"key\": \"phone\", \"relation\": \"=\", \"value\":\r\n                    formData.phone_receiver}],\r\n                    \"contents\": {\"en\": \"You received payment into your ALLY WALLET from \" +\r\n                    utopiasoftware.ally.model.appUserDetails.firstname + \" \" + utopiasoftware.ally.model.appUserDetails.lastname},\r\n                    \"headings\": {\"en\": \"Payment Received\"},\r\n                    \"android_channel_id\": \"81baf9bc-d068-4f4c-9bae-1a3dc8488491\",\r\n                    \"android_visibility\": 0,\r\n                    \"priority\": 5\r\n                };\r\n\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: \"https://onesignal.com/api/v1/notifications\",\r\n                        type: \"post\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic MmQ3ODcwZGUtYmIyYS00NzY5LWIwZWQtMTk5ZGRjNzU2M2Q3\");\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(pushNotification)\r\n                    }\r\n                ));\r\n\r\n                hockeyapp.trackEvent(function(){}, function(){}, \"MERCHANT PAYMENT\"); // track merchant payments\r\n\r\n                // forward details of the wallet-transfer and the user details\r\n                return Promise.all([$('#hour-glass-loader-modal').get(0).hide(),\r\n                    $('#payments-page #payments-tabbar').get(0).setActiveTab(0),\r\n                    ons.notification.toast(\"Merchant Payment Successful!\", {timeout:4000})]);\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = 'Sorry, merchant payment could not be made.<br> ' +\r\n                        'You can try again OR scan the QR Code to pay merchant';\r\n                }\r\n\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> ALLY Payment Error',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for change-pin page\r\n     */\r\n    changePinPageViewModel: {\r\n\r\n        /**\r\n         * used to hold the parsley form validation object for the page\r\n         */\r\n        formValidator: null,\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.changePinPageViewModel.backButtonClicked;\r\n\r\n                // initialise the create-account form validation\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator = $('#change-pin-form').parsley();\r\n\r\n                // attach listener for the change pin button on the page\r\n                $('#change-pin-change-button').get(0).onclick = function(){\r\n                    // run the validation method for the form\r\n                    utopiasoftware.ally.controller.changePinPageViewModel.formValidator.whenValidate();\r\n                };\r\n\r\n                // listen for form field validation failure event\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator.on('field:error', function(fieldInstance) {\r\n                    // get the element that triggered the field validation error and use it to display tooltip\r\n                    // display tooltip\r\n                    $(fieldInstance.$element).addClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).attr(\"data-hint\", fieldInstance.getErrorsMessages()[0]);\r\n                });\r\n\r\n                // listen for the form field validation success event\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator.on('field:success', function(fieldInstance) {\r\n                    // remove tooltip from element\r\n                    $(fieldInstance.$element).removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                    $(fieldInstance.$element).removeAttr(\"data-hint\");\r\n                });\r\n\r\n                // listen for the form validation success\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator.on('form:success',\r\n                    utopiasoftware.ally.controller.changePinPageViewModel.formValidated);\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         *\r\n         * @param event\r\n         */\r\n        pageShow: (event) => {},\r\n\r\n        /**\r\n         * method is triggered when the page is hidden\r\n         * @param event\r\n         */\r\n        pageHide: (event) => {\r\n            try {\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#change-pin-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#change-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // reset the form validator object on the page\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator.reset();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the page is destroyed\r\n         * @param event\r\n         */\r\n        pageDestroy: (event) => {\r\n            try{\r\n                // remove any tooltip being displayed on all forms on the page\r\n                $('#change-pin-page [data-hint]').removeClass(\"hint--always hint--success hint--medium hint--rounded hint--no-animate\");\r\n                $('#change-pin-page [data-hint]').removeAttr(\"data-hint\");\r\n                // destroy the form validator objects on the page\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator.destroy();\r\n            }\r\n            catch(err){}\r\n        },\r\n\r\n        /**\r\n         * method is triggered when sign-up form is successfully validated\r\n         */\r\n        formValidated: function(){\r\n\r\n            // check if Internet Connection is available before proceeding\r\n            if(navigator.connection.type === Connection.NONE){ // no Internet Connection\r\n                // inform the user that they cannot proceed without Internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"ALLY secure PIN cannot be changed without an Internet Connection\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#ff0000', //red\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                return; // exit method immediately\r\n            }\r\n\r\n            // create the form data to be submitted\r\n            var formData = {\r\n                lock: $('#change-pin-page #change-pin-old').val(),\r\n                newlock: $('#change-pin-page #change-pin-new').val(),\r\n                phone: utopiasoftware.ally.model.appUserDetails.phone\r\n            };\r\n\r\n\r\n            // inform the user that their current pin is being changed\r\n            $('#hour-glass-loader-modal .modal-message').html(\"Changing Secure PIN...\");\r\n\r\n            Promise.resolve($('#hour-glass-loader-modal').get(0).show()).\r\n            then(function(){\r\n                // submit the form data\r\n                return Promise.resolve($.ajax(\r\n                    {\r\n                        url: utopiasoftware.ally.model.ally_base_url + \"/mobile/change-pin.php\",\r\n                        type: \"post\",\r\n                        contentType: \"application/x-www-form-urlencoded\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                        },\r\n                        dataType: \"text\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: true,\r\n                        data: formData\r\n                    }\r\n                ));\r\n            }).\r\n            then(function(serverResponse){\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // get the response object\r\n\r\n                // check if any error occurred\r\n                if(serverResponse.status == \"error\"){ // an error occurred\r\n                    throw serverResponse.message; // throw the error message attached to this error\r\n                }\r\n\r\n                // store the updated secure pin\r\n                utopiasoftware.ally.model.appSecurePin = formData.newlock;\r\n            }).\r\n            then(function(){\r\n                // create a cypher data of the user secure pin\r\n                return Promise.all([\r\n                    Promise.resolve(intel.security.secureData.\r\n                    createFromData({\"data\": formData.newlock}))]);\r\n            }).\r\n            then(function(instanceIdArray){\r\n                // store the cyphered data & secure pin in secure persistent storage\r\n                return Promise.all([\r\n                    Promise.resolve(\r\n                        intel.security.secureStorage.write({\"id\": \"ally-user-secure-pin\", \"instanceID\": instanceIdArray[0]}))\r\n                ]);\r\n            }).\r\n            then(function(){\r\n\r\n                // reset the form\r\n                $('#change-pin-page #change-pin-form').get(0).reset();\r\n                utopiasoftware.ally.controller.changePinPageViewModel.formValidator.reset();\r\n                return $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n            }).\r\n            then(function(){\r\n\r\n                // send push notification that account was updated\r\n                let pushNotification = { // create the push notification object\r\n                    \"app_id\": \"d5d2bdba-eec0-46b1-836e-c5b8e318e928\",\r\n                    \"filters\": [{\"field\": \"tag\", \"key\": \"phone\", \"relation\": \"=\", \"value\":\r\n                    utopiasoftware.ally.model.appUserDetails.phone}],\r\n                    \"contents\": {\"en\": \"Your ALLY secure PIN has just been changed\"},\r\n                    \"headings\": {\"en\": \"ALLY PIN Changed\"},\r\n                    \"android_channel_id\": \"9fd6b6ae-9937-476f-8ae9-7e9958763532\",\r\n                    \"android_visibility\": 1,\r\n                    \"priority\": 10\r\n                };\r\n\r\n                Promise.resolve($.ajax(\r\n                    {\r\n                        url: \"https://onesignal.com/api/v1/notifications\",\r\n                        type: \"post\",\r\n                        contentType: \"application/json\",\r\n                        beforeSend: function(jqxhr) {\r\n                            jqxhr.setRequestHeader(\"Authorization\", \"Basic MmQ3ODcwZGUtYmIyYS00NzY5LWIwZWQtMTk5ZGRjNzU2M2Q3\");\r\n                        },\r\n                        dataType: \"json\",\r\n                        timeout: 240000, // wait for 4 minutes before timeout of request\r\n                        processData: false,\r\n                        data: JSON.stringify(pushNotification)\r\n                    }\r\n                ));\r\n\r\n                // inform user that PIN has been changed\r\n                ons.notification.toast(\"PIN changed successfully\", {timeout:3000});\r\n            }).\r\n            catch(function(err){\r\n                if(typeof err !== \"string\"){ // if err is NOT a String\r\n                    err = \"Sorry, your Secure PIN could not be changed\"\r\n                }\r\n                $('#hour-glass-loader-modal').get(0).hide(); // hide loader\r\n                ons.notification.alert({title: '<ons-icon icon=\"md-close-circle-o\" size=\"32px\" ' +\r\n                'style=\"color: red;\"></ons-icon> PIN Change Failed',\r\n                    messageHTML: '<span>' + err + '</span>',\r\n                    cancelable: false\r\n                });\r\n            });\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the PIN visibility button is clicked.\r\n         * It toggles pin visibility\r\n         *\r\n         * @param buttonElement\r\n         * @param inputFieldId\r\n         */\r\n        pinVisibilityButtonClicked: function(buttonElement, inputFieldId){\r\n            if($(buttonElement).attr(\"data-ally-visible\") === \"no\"){ // pin is not visible, make it visible\r\n                $(`#${inputFieldId} input`).css(\"-webkit-text-security\", \"none\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye-off\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-ally-visible\", \"yes\"); // flag the pin is now visible\r\n            }\r\n            else{ // make the pin not visible\r\n                $(`#${inputFieldId} input`).css(\"-webkit-text-security\", \"disc\"); // change the text-security for the input field\r\n                $(buttonElement).find('ons-icon').attr(\"icon\", \"md-eye\"); // change the icon associated with the input\r\n                $(buttonElement).attr(\"data-ally-visible\", \"no\"); // flag the pin is now invisible\r\n            }\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // go back to previous page in the main-navigator stack\r\n            $('#app-main-navigator').get(0).popPage({});\r\n        }\r\n    },\r\n\r\n\r\n    /**\r\n     * object is view-model for transaction history page\r\n     */\r\n    transactionHistoryPageViewModel: {\r\n\r\n        /**\r\n         * property is used to hold the \"Transaction History\" Grid\r\n         */\r\n        transactionHistoryGrid: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware.ally.model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#app-main-navigator').get(0).topPage.onDeviceBackButton =\r\n                    utopiasoftware.ally.controller.transactionHistoryPageViewModel.backButtonClicked;\r\n\r\n                // inject the the modules required to create the transaction history grid\r\n                ej.grids.Grid.Inject(ej.grids.Selection, ej.grids.Scroll, ej.grids.Search, ej.grids.Toolbar, ej.grids.PdfExport);\r\n\r\n                // update the Transaction History Grid\r\n                utopiasoftware.ally.controller.transactionHistoryPageViewModel.updateTransactionHistoryGrid();\r\n\r\n                // hide the loader\r\n                $('#loader-modal').get(0).hide();\r\n\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the transaction history grid\r\n            utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid.destroy();\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when back button or device back button is clicked\r\n         */\r\n        backButtonClicked: function(){\r\n\r\n            // check if the side menu is open\r\n            if($('ons-splitter').get(0).right.isOpen){ // side menu open, so close it\r\n                $('ons-splitter').get(0).right.close();\r\n                return; // exit the method\r\n            }\r\n\r\n            // go back to previous page in the main-navigator stack\r\n            $('#app-main-navigator').get(0).popPage({});\r\n        },\r\n\r\n\r\n\r\n        /**\r\n         * update the transaction history grid. Either using cached data or remote data\r\n         *\r\n         */\r\n        updateTransactionHistoryGrid: function(){\r\n\r\n            var pdfExportBlob = null; // holds the blob for the pdf content being exported\r\n\r\n            // check if the Transaction History Grid has been created before, of so destroy it\r\n            if(utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid){ // grid has previously been created\r\n                // destroy the grid object\r\n                utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid.destroy();\r\n            }\r\n\r\n            // display grid loading indicator\r\n            $('#transaction-history-page #transaction-history-transaction-grid').\r\n            html(`<div class=\"title\" style=\"font-size: 0.85em; padding: 0.5em;\">\r\n                    ALLY Transaction History\r\n                </div>\r\n                <div class=\"content\" style=\"padding: 0.5em;\">\r\n\r\n                    <ons-icon icon=\"md-settings\" size=\"28px\" style=\"color: #30a401;\" spin>\r\n                    </ons-icon>\r\n                </div>`);\r\n\r\n\r\n            // check if there is internet connection or not\r\n            if(navigator.connection.type === Connection.NONE){ // there is no internet connection\r\n                // inform the user that cached data will be displayed in the absence of internet\r\n                window.plugins.toast.showWithOptions({\r\n                    message: \"No Internet Connection. Previously cached data will be displayed\",\r\n                    duration: 4000,\r\n                    position: \"top\",\r\n                    styling: {\r\n                        opacity: 1,\r\n                        backgroundColor: '#008000',\r\n                        textColor: '#FFFFFF',\r\n                        textSize: 14\r\n                    }\r\n                }, function(toastEvent){\r\n                    if(toastEvent && toastEvent.event == \"touch\"){ // user tapped the toast, so hide toast immediately\r\n                        window.plugins.toast.hide();\r\n                    }\r\n                });\r\n\r\n                // load the previously cached data\r\n                utopiasoftware.ally.transactionHistoryCharts.loadTransactionHistoryData().\r\n                then(function(dataArray){ // get the data array to be used by grid\r\n                    // format the data array so it can be properly used\r\n                    return gridDataMapping(dataArray);\r\n                }).\r\n                then(function(dataArray){\r\n                    utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid =\r\n                        new ej.grids.Grid({\r\n                            // Width for grid\r\n                            width: '100%',\r\n                            allowTextWrap: true,\r\n                            showColumnChooser: true,\r\n                            toolbar: ['search', 'columnchooser'],\r\n                            columns: [\r\n                                { field: 'SENDER', headerText: 'Sender', width: \"25%\", clipMode: 'ellipsiswithtooltip' },\r\n                                { field: 'RECEIVER', headerText: 'Recipient', width: \"25%\", clipMode: 'ellipsiswithtooltip' },\r\n                                { field: 'AMOUNT', headerText: 'Amount', width: \"25%\", textAlign: 'right',\r\n                                    clipMode: 'ellipsiswithtooltip'},\r\n                                { field: 'DDATE', headerText: 'Date', width: \"25%\",\r\n                                    clipMode: 'ellipsiswithtooltip'},\r\n                                { field: 'TRANSFERTYPE', headerText: 'Type', width: \"25%\",\r\n                                    clipMode: 'ellipsiswithtooltip', visible: false},\r\n                                { field: 'TRANSACTIONREF', headerText: 'Ref', width: \"25%\", clipMode: 'ellipsiswithtooltip',\r\n                                    visible: false}\r\n                            ],\r\n                            dataSource: dataArray\r\n                        });\r\n\r\n                    // remove the loader content\r\n                    $('#transaction-history-page #transaction-history-transaction-grid').html(\"\");\r\n                    //append the newly created grid\r\n                    utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid.\r\n                    appendTo('#transaction-history-transaction-grid');\r\n                });\r\n\r\n                return; // exit method\r\n            }\r\n\r\n            //THERE IS AN INTERNET CONNECTION\r\n            // request for the user wallet transfer-in data for the provided time period\r\n            Promise.resolve($.ajax(\r\n                {\r\n                    url: utopiasoftware.ally.model.ally_base_url + \"/mobile/transaction-report.php\",\r\n                    type: \"post\",\r\n                    contentType: \"application/x-www-form-urlencoded\",\r\n                    beforeSend: function(jqxhr) {\r\n                        jqxhr.setRequestHeader(\"X-ALLY-APP\", \"mobile\");\r\n                    },\r\n                    dataType: \"text\",\r\n                    timeout: 240000, // wait for 4 minutes before timeout of request\r\n                    processData: true,\r\n                    data: {phone: utopiasoftware.ally.model.appUserDetails.phone} // data to submit to server\r\n                }\r\n            )).\r\n            then(function(serverResponse){// retrieve the server response\r\n                serverResponse +=  \"\";\r\n                serverResponse = JSON.parse(serverResponse.trim()); // return the server response as an object\r\n                return Promise.all([serverResponse, utopiasoftware.ally.transactionHistoryCharts.loadTransactionHistoryData()]);\r\n            }).\r\n            then(function(dataArray){ // save the grid array data to cache\r\n                dataArray[1] = dataArray[1];\r\n                dataArray[1] = dataArray[0];\r\n                return utopiasoftware.ally.transactionHistoryCharts.saveTransactionHistoryData(dataArray[1]);\r\n            }).\r\n            then(function(dataArray){ // get the data array to be used by grid\r\n                // format the chart data array so it can be properly used\r\n                return gridDataMapping(dataArray);\r\n            }).\r\n            then(function(dataArray){\r\n                utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid =\r\n                    new ej.grids.Grid({\r\n                        // Width for grid\r\n                        width: '100%',\r\n                        allowTextWrap: true,\r\n                        showColumnChooser: true,\r\n                        toolbar: ['search', 'columnchooser'],\r\n                        columns: [\r\n                            { field: 'SENDER', headerText: 'Sender', width: \"25%\", clipMode: 'ellipsiswithtooltip' },\r\n                            { field: 'RECEIVER', headerText: 'Recipient', width: \"25%\", clipMode: 'ellipsiswithtooltip' },\r\n                            { field: 'AMOUNT', headerText: 'Amount', width: \"25%\", textAlign: 'right',\r\n                                clipMode: 'ellipsiswithtooltip'},\r\n                            { field: 'DDATE', headerText: 'Date', width: \"25%\",\r\n                                clipMode: 'ellipsiswithtooltip'},\r\n                            { field: 'TRANSFERTYPE', headerText: 'Type', width: \"25%\",\r\n                                clipMode: 'ellipsiswithtooltip', visible: false},\r\n                            { field: 'TRANSACTIONREF', headerText: 'Ref', width: \"25%\", clipMode: 'ellipsiswithtooltip',\r\n                                visible: false}\r\n                        ],\r\n                        dataSource: dataArray\r\n                    });\r\n\r\n                // remove the loader content\r\n                $('#transaction-history-page #transaction-history-transaction-grid').html(\"\");\r\n                //append the newly created grid\r\n                utopiasoftware.ally.controller.transactionHistoryPageViewModel.transactionHistoryGrid.\r\n                appendTo('#transaction-history-transaction-grid');\r\n\r\n            });\r\n\r\n\r\n            /**\r\n             * function is used to map the grid data into an appropriate form that can be displayed by the chart\r\n             * @param gridDataArray {Array} array containing grid data objects to be mapped\r\n             *\r\n             * @return {Array} an array containing properly formatted objects that can be used by the grid\r\n             */\r\n            function gridDataMapping(gridDataArray){\r\n                return gridDataArray.map(function(dataObject){\r\n                    dataObject.AMOUNT = kendo.toString(kendo.parseFloat(dataObject.AMOUNT), \"n2\"); // convert to currency format\r\n                    dataObject.DDATE = kendo.toString(kendo.parseDate(dataObject.DDATE, \"yyyy-MM-dd HH:mm:ss\"),\r\n                    \"yyyy-MM-dd; h:mmtt\"); // convert to date object\r\n                    return dataObject; // return the modified object\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n"]}